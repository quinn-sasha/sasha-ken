{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Hi, my name is Sasha. I am a university student who likes computer science. My current goal is to contribute to open source software.</p> <p>contribution</p>"},{"location":"Algo/Algorithm_goal/","title":"Algorithm\u306e\u52c9\u5f37\u3067\u76ee\u6307\u3059\u30b4\u30fc\u30eb","text":"<p>\u30b3\u30fc\u30c9\u3092\u8aad\u3081\u308b\u304b(\u5927\u898f\u6a21\u306a\u30b3\u30fc\u30c9\u3092\u8aad\u89e3\u3057\u7406\u89e3\u3059\u308b\u80fd\u529b)\u306e\u65b9\u304c\u3060\u3044\u3076\u91cd\u8981 \u30bc\u30ed\u304b\u3089\u305d\u308c\u3063\u307d\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u306e\u306f\u6bd4\u8f03\u7684\u6613\u3057\u304f\u3001\u982d\u306e\u4e2d\u3067\u8d70\u3089\u305b\u3066\u4fee\u6b63\u3059\u308b\u65b9\u304c\u96e3\u3057\u3044\u3002 \u30b3\u30fc\u30c9\u3092\u601d\u3063\u305f\u3088\u3046\u306b\u5909\u5f62\u3055\u305b\u3089\u308c\u308b\u304b\u306e\u81ea\u7531\u5ea6\u304c\u304b\u306a\u308a\u91cd\u8981\u3002 LeetCode\u306eMedium\u7a0b\u5ea6\u306e\u554f\u984c\u3067\u3042\u308c\u3070\u4f55\u3082\u898b\u305a\u306b\u66f8\u3051\u308b\u3057\u4fee\u6b63\u3067\u304d\u308b\u80fd\u529b     \u95a2\u9023\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4e2d\u8eab\u3092\u554f\u308f\u308c\u308c\u3070\u305d\u308c\u3082\u66f8\u3051\u3066\u6b32\u3057\u3044 \u8a00\u8a9e\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u9593\u306e\u5dee\u7570\u3001\u8a00\u8a9e\u4ed5\u69d8\u304b\u74b0\u5883\u4f9d\u5b58\u304b\u306a\u3069\u3082\u542b\u3081\u3066\u6c17\u3092\u914d\u308c\u308b\u80fd\u529b \u4ed6\u4eba\u306b\u8aad\u307f\u3084\u3059\u3044\u3088\u3046\u306b\u66f8\u304f\u80fd\u529b \u5927\u898f\u6a21\u306a\u30b3\u30fc\u30c9\u3092\u8aad\u89e3\u3057\u7406\u89e3\u3059\u308b\u80fd\u529b \u982d\u306e\u4e2d\u3067\u30b3\u30fc\u30c9\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3057\u3001\u30c7\u30d0\u30c3\u30b0\u3067\u304d\u308b\u80fd\u529b</p>"},{"location":"Algo/Algorithm_goal/#_1","title":"\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u306e\u76ee\u7684","text":"<p>\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u306e\u76ee\u7684\u306f\u300c\u516c\u5171\u306e\u5b89\u5168\u3001\u5065\u5eb7\u3001\u798f\u7949\u306e\u305f\u3081\u306b\u6709\u7528\u306a\u4e8b\u7269\u3084\u5feb\u9069\u306a\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u300d\u3002\u300c\u30e6\u30fc\u30b6\u30fc\u306e\u305f\u3081\u300d\u3068\u3044\u3046\u76ee\u7684\u610f\u8b58\u304c\u5927\u4e8b\u3002</p> <p>\u81ea\u5206\u306e\u80fd\u529b\uff08\u7acb\u5834\uff09\u3092\u5ba2\u89b3\u8996\u3059\u308b\u80fd\u529b(\u30e1\u30bf\u8a8d\u77e5)\u304c\u5927\u4e8b\u3002 \u300c\u4f55\u304c\u3067\u304d\u308b\u300d\u3084\u300c\u4f55\u304c\u3067\u304d\u305f\u300d\u304b\u3089\u512a\u308c\u3066\u3044\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u306f\u5168\u304f\u306a\u3044\u3002 \u512a\u79c0\u3055\u3084\u77e5\u8b58\u91cf\u306b\u5bfe\u3059\u308b\u3053\u3060\u308f\u308a\u3092\u6368\u3066\u3088\u3046\u3002</p>"},{"location":"Algo/Algorithm_goal/#1","title":"\u7df4\u7fd2\u65b9\u6cd51","text":"<p>\u307e\u305a\u3001\u4e0a\u8a18\u306e\u554f\u984c\u3092\u4e00\u554f\u305a\u3064\u89e3\u3044\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u3057\u3066\u3001\u4e00\u554f\u89e3\u3044\u305f\u3089\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u6d88\u3057\u3001\u518d\u5ea6\u89e3\u304d\u76f4\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u89e3\u304d\u76f4\u3059\u3068\u304d\u3001\u3088\u308a\u30b7\u30f3\u30d7\u30eb\u306b\u3001\u3088\u308a\u901f\u304f\u66f8\u3051\u308b\u3088\u3046\u610f\u8b58\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u3092\u3001\u7d0d\u5f97\u3067\u304d\u308b\u901f\u5ea6\u304c\u3067\u308b\u307e\u3067\u7e70\u308a\u8fd4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u4e38\u6697\u8a18\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\u4e5d\u4e5d\u306e\u6697\u5531\u306e\u7df4\u7fd2\u3084\u3001\u639b\u3051\u7b97\u306e\u7b46\u7b97\u306e\u7df4\u7fd2\u306e\u3088\u3046\u306b\u3001\u610f\u8b58\u3057\u306a\u304f\u3066\u3082\u4f53\u304c\u52dd\u624b\u306b\u52d5\u304f\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u3001\u4f55\u5ea6\u3082\u4f55\u5ea6\u3082\u7e70\u308a\u8fd4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u6700\u7d42\u7684\u306b\u3001\u96e3\u6613\u5ea6 Medium \u306e\u554f\u984c\u3092\u3001\u521d\u898b\u3067 10 \u5206\u7a0b\u5ea6\u3067\u89e3\u3051\u308b\u3088\u3046\u306b\u306a\u308c\u3070\u3001\u5341\u5206\u3060\u3068\u601d\u3044\u307e\u3059\u3002</p> <p>\u5927\u4f533\u30014\u56de\u66f8\u304d\u76f4\u3059</p> <p>\u7df4\u7fd2\u65b9\u6cd52</p> <p>\u65b0\u4e95\u3055\u3093\u306e\u554f\u984c\u9806\u756a\u306b\u3084\u3063\u3066\u3044\u304d\u307e\u3059\u3002\u4e00\u65e5\u4e00\u554f\u3067\u6700\u521d\u306f\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u7b54\u3048\u3092\u898b\u305a\u306b\u8003\u3048\u3066\u30015\u5206\u8003\u3048\u3066\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u3089\u7b54\u3048\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\u7b54\u3048\u3092\u898b\u3066\u7406\u89e3\u3057\u305f\u3068\u601d\u3063\u305f\u3089\u3001\u7b54\u3048\u3092\u96a0\u3057\u3066\u66f8\u3044\u3066\u304f\u3060\u3055\u3044\u3002\u7b46\u304c\u9032\u307e\u305a5\u5206\u8ff7\u3063\u305f\u3089\u7b54\u3048\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u3057\u3066\u3001\u898b\u3061\u3083\u3063\u305f\u3089\u4e00\u56de\u5168\u90e8\u6d88\u3057\u3066\u3084\u308a\u76f4\u3057\u3067\u3059\u3002\u7b54\u3048\u3092\u9001\u4fe1\u3057\u3066\u3001\u6b63\u89e3\u306b\u306a\u3063\u305f\u3089\u3001\u307e\u305a\u306f\u4e00\u6bb5\u968e\u76ee\u3067\u3059\u3002\u6b21\u306b\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u3084\u3059\u304f\u3059\u308b\u3088\u3046\u306b\u3067\u304d\u308b\u3060\u3051\u6574\u3048\u307e\u3057\u3087\u3046\u3002\u3053\u308c\u3067\u52d5\u304f\u30b3\u30fc\u30c9\u306b\u306a\u3063\u305f\u3089\u4e8c\u6bb5\u968e\u76ee\u3067\u3059\u3002\u305d\u3057\u305f\u3089\u3089\u307e\u305f\u5168\u90e8\u6d88\u3057\u307e\u3057\u3087\u3046\u3002\u4eca\u5ea6\u306f\u3001\u6642\u9593\u3092\u6e2c\u308a\u306a\u304c\u3089\u3001\u3082\u3046\u4e00\u56de\u3001\u66f8\u304d\u307e\u3057\u3087\u3046\u3002\u66f8\u3044\u3066\u30a2\u30af\u30bb\u30d7\u30c8\u3055\u308c\u305f\u3089\u6587\u5b57\u6d88\u3057\u3066\u3082\u3046\u4e00\u56de\u66f8\u304d\u307e\u3057\u3087\u3046\u3002\u3053\u308c\u309210\u5206\u4ee5\u5185\u306b\u4e00\u56de\u3082\u30a8\u30e9\u30fc\u3092\u51fa\u3055\u305a\u306b\u66f8\u3051\u308b\u72b6\u614b\u306b\u306a\u308b\u307e\u3067\u7d9a\u3051\u3066\u304f\u3060\u3055\u3044\u30023\u56de\u7d9a\u3051\u3066\u305d\u308c\u304c\u3067\u304d\u305f\u3089\u305d\u306e\u554f\u984c\u306f\u3072\u3068\u307e\u305a\u4e38\u3067\u3059\u3002</p>"},{"location":"Algo/Arai60/","title":"Arai60","text":"<p>\u500b\u4eba\u30ea\u30f3\u30af</p>"},{"location":"Algo/Leetcode_plan/","title":"Goal","text":"<p>\u898b\u305f\u3053\u3068\u306e\u306a\u3044medium problem\u309220-25\u5206\u3067\u89e3\u3051\u308b</p> <ul> <li>\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u89e3\u304f\u9806\u756a\u304c\u5927\u4e8b\u3002roadmap\u3092\u6d3b\u7528\u3059\u308b\u3002</li> <li>1\u3064\u306e\u554f\u984c\u306b\u306f\u6642\u9593\u3092\u304b\u3051\u3059\u304e\u306a\u3044\u3002\u6642\u9593\u306e\u7121\u99c4\u3002</li> <li>\u3069\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u3048\u3070\u826f\u3044\u304b\u306e\u30d1\u30bf\u30fc\u30f3\u304c\u898b\u3048\u3066\u304f\u308b\u3002</li> <li>leetcode\u3060\u3051\u304csoftware engineer\u3068\u3057\u3066\u5fc5\u8981\u306a\u30b9\u30ad\u30eb\u3067\u306f\u306a\u3044</li> </ul> <p>Time\uff08\u5165\u51fa\u529b\u304c\u5408\u3046\u307e\u3067\u306e\uff09: 10\u5206\u8003\u3048\u3066\u7b46\u304c\u9032\u307e\u306a\u304b\u3063\u305f\u3089\u7b54\u3048\u3092\u898b\u308b - Easy: 15min - Medium: 25min - Hard: 35min</p>"},{"location":"Algo/Leetcode_plan/#plan","title":"Plan","text":"<p>\u6bce\u65e52\u554f\u4f3c\u305f\u3088\u3046\u306a\u554f\u984c\u3092\u89e3\u304f\u3002\u5fc5\u8981\u3068\u611f\u3058\u308c\u3070\u3001\u6559\u79d1\u66f8\u3084\u30d3\u30c7\u30aa\u3092\u898b\u308b\u3002 e.g.) Algorithm illuminated video</p> <p>(12-1\u6708) - Array, hashing - stack - two pointer - binary search - slicing window - linked-list</p> <p>(2-3\u6708) - tree - graph1</p> <p>(3-4\u6708) - graph2 - greedy, DP</p> <p>(5-6\u6708) - \u7dcf\u5fa9\u7fd2</p>"},{"location":"Book/Algorithm_design_manual/","title":"Algorithm design manual","text":""},{"location":"Book/Algorithm_design_manual/#data-structure","title":"Data structure","text":"<ul> <li>Priority queue\u306fsorting\u3088\u308a\u3082\u7279\u5b9a\u306e\u512a\u5148\u9806\u4f4d\u3067element\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u306b\u5411\u3044\u3066\u3044\u308b\u3002</li> <li>Selection sort\u306b\u3068\u3063\u3066\u9069\u5207\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306fheap\u3002Heap\u5185\u306eitem\u306f\u512a\u5148\u9806\u4f4d\u304c\u9ad8\u3044\u307b\u3069root\u306b\u8fd1\u3044\u3002</li> <li>node\u306f\u6700\u5f8c\uff08\u53f3\u4e0b\u306enode\uff09\u3092\u9664\u3044\u3066\u5b58\u5728\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002</li> <li>array\u306b\u3088\u308b\u5b9f\u88c5\u3067\u306f\u3001binary search\u306f\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u7279\u5b9a\u306e\u30ad\u30fc\u3092\u63a2\u3059\u306e\u306bO(n)\u304b\u304b\u308b</li> <li>Heap\u306bitem\u3092\u633f\u5165\u3057\u305f\u5834\u5408\u3001\u518d\u5e30\u7684\u306b\u89aa\u3068\u512a\u5148\u9806\u4f4d\u3092\u6bd4\u3079\u308b\u3002\u3082\u3057\u5b50\u306e\u65b9\u304c\u512a\u5148\u5ea6\u304c\u9ad8\u3044\u5834\u5408\u30012\u3064\u306e\u30ce\u30fc\u30c9\u3092\u5165\u308c\u66ff\u3048\u308b\u3002</li> <li>Heap\u4f5c\u6210\u306b\u304b\u304b\u308b\u6642\u9593\uff1a\u5404\u633f\u5165\u306f\u6700\u60aatree\u306eheight\u3092\u901a\u308b\u3053\u3068\u306b\u306a\u308b\u304b\u3089\u3001O(log n)\u3002\u3088\u3063\u3066n\u500b\u306e\u30ce\u30fc\u30c9\u633f\u5165\u306fO(n log n)\u3002</li> <li>Heap\u306b\u3088\u308bselection sort: Min elements\u3092\u629c\u304d\u51fa\u3059\u3060\u3051\u306a\u3089O(1)\u3002\u3057\u304b\u3057Heap\u306e\u6027\u8cea\u3092\u4fdd\u3064\u305f\u3081\u306bO(log n)\u3002\u3088\u3063\u3066\u5168\u3066n\u500b\u306e\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3059\u306e\u306bO(n log n)\u304b\u304b\u308b\u3002</li> <li>\u3088\u308a\u52b9\u679c\u7684\u306aheap\u4f5c\u6210\u6cd5\u306f\u3001\u3068\u308a\u3042\u3048\u305a\u5168\u3066\u306e\u8981\u7d20\u3092\u3076\u3061\u8fbc\u3093\u3067\u3001tree\u306eleaf\u304b\u3089\u89aa\u3068\u5b50\u3092\u6bd4\u3079\u308b\u3053\u3068\u3002Leaf\u306f\u3059\u3067\u306b\u6b63\u3057\u3044mini heap\u306a\u306e\u3067\u3001n / 2\u500b\u306e\u30ce\u30fc\u30c9\u306f\u4f55\u3082\u3057\u306a\u304f\u3066\u6e08\u3080\u3002</li> <li></li> </ul>"},{"location":"Book/Algorithm_design_manual/#graph-traversal","title":"Graph traversal","text":"<ul> <li>\u5404\u30b0\u30e9\u30d5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3088\u308a\u3082\u3001\u30b0\u30e9\u30d5\u306b\u95a2\u3059\u308b\u554f\u984c\u306b\u89aa\u3057\u3080\u3053\u3068\u304c\u3088\u308a\u672c\u8cea\u7684</li> <li>Implicit vs explicit: \u30b0\u30e9\u30d5\u304c\u3059\u3067\u306b\u4f5c\u3089\u308c\u305f\u3082\u306e\u3067\u3042\u308b\u3002\u3082\u3057\u304f\u306ftraverse\u3059\u308b\u306b\u3064\u308c\u3066\u69cb\u7bc9\u3055\u308c\u308b\u3082\u306e\u3067\u3042\u308b\u304b\u3002</li> <li>Adjacency lists\u304c\u5927\u4f53\u306e\u5834\u5408\u3001\u30b0\u30e9\u30d5\u306e\u8868\u73fe\u306b\u9069\u5207\u306a\u30c7\u30fc\u30bf\u69cb\u9020</li> <li>Graph\u306bbfs\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u3042\u308btree\u304c\u3067\u304d\u308b\u304c\u3001\u5143\u306e\u30b0\u30e9\u30d5\u306eedge\u3044\u304f\u3064\u304b\u306ftree\u306b\u542b\u307e\u308c\u306a\u3044\u3002</li> <li>bfs\u306b\u3088\u3063\u3066</li> </ul>"},{"location":"Book/C_programming_language/","title":"C programming language","text":""},{"location":"Book/C_programming_language/#ch_4-program-structure","title":"ch_4 Program Structure","text":"<ul> <li>\u5916\u90e8\u5909\u6570\u306e\u5ba3\u8a00\u306f\u30bf\u30a4\u30d7\u3092\u6c7a\u3081\u308b\u3002\u5b9a\u7fa9\u306f\u305d\u306e\u5909\u6570\u306e\u305f\u3081\u306b\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u5272\u308a\u5f53\u3066\u308b\u3002\u5916\u90e8\u5909\u6570\u306f\u95a2\u9023\u3059\u308b\u5168\u3066\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u3067\u3001\u4e00\u5ea6\u3060\u3051\u5b9a\u7fa9\u3055\u308c\u308b\u3002\"Static variable or function\" can be only seen in the file where they are declared. Runtime\u306e\u5f85\u3061\u6642\u9593(overhead)\u3092\u907f\u3051\u308b\u305f\u3081\u306bmacro\u5909\u6570\u3092\u95a2\u6570\u306e\u4ee3\u308f\u308a\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u3002\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u524d\u306b\u3001\u5b9f\u884c\u3059\u308b\u304b\u5426\u304b\u3092\u6761\u4ef6\u5f0f\u3067\u6c7a\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u5927\u898f\u6a21\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306e\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u306e\u5b58\u5728\u610f\u7fa9\u3092\u77e5\u3063\u305f\u3002</li> </ul>"},{"location":"Book/C_programming_language/#ch-5-pointers","title":"ch-5 Pointers","text":"<ul> <li>\u95a2\u6570\u306b\u6e21\u3055\u308c\u305f\u5f15\u6570\u306e\u5024\u3092\u5909\u5316\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u3001\u30dd\u30a4\u30f3\u30bf\u30fc\u3068\u3057\u3066\u95a2\u6570\u306b\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002\u591a\u6b21\u5143\u914d\u5217\u306f\u3001\u5b9f\u969b\u4e00\u3064\u306e\u914d\u5217\u306e\u5404\u8981\u7d20\u304c\u914d\u5217\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3055\u308c\u3066\u3044\u308b\u3002\u30dd\u30a4\u30f3\u30bf\u914d\u5217\u304c\u591a\u6b21\u5143\u914d\u5217\u3088\u308a\u512a\u308c\u3066\u3044\u308b\u70b9\u306f\u3001\u591a\u6b21\u5143\u914d\u5217\u306e\u884c\u306e\u9577\u3055\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u3053\u3068\u3002</li> <li>Storage allocator\u306e\u57fa\u672c\u7684\u306a\u5f79\u5272\u306f\u3001\u30b5\u30a4\u30ba\u306b\u5408\u3063\u305f\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u3068\u3001\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u89e3\u653e\u3059\u308b\u3053\u3068\u3002\u30b9\u30bf\u30c3\u30af\u3092\u4f7f\u3046\u3053\u3068\u3067\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3002</li> <li>Declaration\u306f\u901a\u5e38\u5de6\u304b\u3089\u53f3\u306b\u9069\u7528\u3055\u308c\u308b\u3002\u3057\u304b\u3057<code>()</code>\u3092\u4f7f\u3046\u3053\u3068\u3067\u9069\u7528\u9806\u756a\u3092\u64cd\u4f5c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002<code>void</code>\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u30fc\u306f\u3001\u3069\u3093\u306a\u30bf\u30a4\u30d7\u306e\u30c7\u30fc\u30bf\u3092\u6307\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3089\u6c4e\u7528\u6027\u304c\u3042\u308b\u3002</li> </ul>"},{"location":"Book/C_programming_language/#ch-6-structure","title":"ch-6 Structure","text":"<ul> <li>Struct\u5ba3\u8a00\u306e\u307f\u3067\u306f\u65b0\u305f\u306b\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u3053\u3068\u306f\u306a\u3044\u3002<code>typedef struct { .. } elem;</code>\u3068<code>struct elem { .. };</code>\u306e\u9055\u3044\u306f\u3001\u524d\u8005\u3067\u306f<code>elem</code>\u304c\u5909\u6570\u306b\u306a\u3063\u305f\u306e\u306b\u5bfe\u3057\u3066\u3001\u5f8c\u8005\u306fstructure\u306e\u30c6\u30f3\u30d7\u30ec\u3092\u5ba3\u8a00\u3057\u305f\u3060\u3051\u3068\u3044\u3046\u3053\u3068\u3002\u307e\u305f\u4ed6\u306e\u30d5\u30a1\u30a4\u30eb\u306b<code>#include</code>\u3055\u308c\u308b\u5834\u5408\u3082\u524d\u8005\u3092\u4f7f\u3048\u3070\u3001\u4f55\u5ea6\u3082<code>struct</code>\u5ba3\u8a00\u3092\u3057\u306a\u304f\u3066\u6e08\u3093\u3067\u4fbf\u5229\u3002</li> <li>structure\u3068\u95a2\u6570\u306e\u4ea4\u6d41\u306b\u306f3\u3064\u306e\u65b9\u6cd5\u304c\u3042\u308b\u3002structure\u306e\u69cb\u6210\u8981\u7d20\u3092\u90e8\u5206\u7684\u306b\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u3053\u3068\u3002structure\u5168\u4f53\u3092\u305d\u306e\u307e\u307e\u6e21\u3059\u3053\u3068\u3002structure\u3078\u306epointer\u3092\u6e21\u3059\u3053\u3068\u304c\u3042\u308b\u3002structure\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u30fc\u3092\u4f7f\u3046\u3068\u304d\u306f\u3001sturucture\u304c\u5927\u898f\u6a21\u306a\u5834\u5408\u3002</li> <li>Array\u306e\u5404\u8981\u7d20\u304cstructure\u3067\u3042\u308b\u4f8b\u3068\u3001pointer to structure\u3092\u4f7f\u3046\u4f8b\u3092\u898b\u305f\u3002</li> </ul> <p>. \u306fsturucture\u81ea\u4f53\u306b\u4f7f\u7528\u3055\u308c\u3001-&gt; \u306f\u69cb\u9020\u4f53\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u306b\u5bfe\u3057\u3066\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002 e.g.) <pre><code>p-&gt;field // is equalt to\n(*p).field\n</code></pre></p> <p>Unread: from self referential structure</p>"},{"location":"Book/How_to_solve_it/","title":"How to Solve It","text":""},{"location":"Book/How_to_solve_it/#induction-and-mathematical-induction","title":"Induction and Mathematical Induction","text":"<ul> <li>\u73fe\u5728\u306e\u554f\u984c\u304c\u96e3\u3057\u305d\u3046\u3067\u89e3\u3051\u306a\u3044\u3068\u611f\u3058\u308b\u6642\u3001\u95a2\u9023\u3059\u308b\u3088\u308a\u624b\u306e\u3064\u304d\u305d\u3046\u306a\u554f\u984c\u306f\u4f55\u3067\u3059\u304b</li> <li>\u3053\u306e\u95a2\u9023\u3059\u308b\u554f\u984c\u306f\u601d\u3044\u51fa\u3059\u3068\u3044\u3046\u3088\u308a\u3082\u3001\u4f5c\u308a\u51fa\u3059\u65b9\u304c\u8fd1\u3044</li> <li>\u4e00\u822c\u5316\u306f\u89b3\u6e2c\u3055\u308c\u305f\u30d1\u30bf\u30fc\u30f3\u3092\u7406\u89e3\u3057\u3088\u3046\u3068\u3059\u308b\u52aa\u529b\u304b\u3089\u751f\u307e\u308c\u308b</li> </ul> <p>p.13\u304b\u3089</p>"},{"location":"Book/SICP/","title":"SICP","text":""},{"location":"Book/SICP/#project","title":"project","text":"<ul> <li>To understand how program works,</li> <li>So be versatile to any programming language</li> </ul> <p>By 9/1</p>"},{"location":"Book/SICP/#11-elements-of-programming-language","title":"1.1 Elements of programming language","text":""},{"location":"Book/SICP/#key-ideas","title":"Key Ideas","text":"<pre><code>flowchart LR\nA[simple idea] --&gt; B[complex idea]\nC[simple idea] --&gt; B\nD[simple idea] --&gt; B</code></pre> <ol> <li>primitive expressions</li> <li>means of combination</li> <li>means of abstraction</li> </ol> <p>The most basic elements of programming language is 'data' and 'procedure'.</p> <pre><code>flowchart LR\nA[procedures] --- B[primitive such as +]\nA --- C[compound procedures]</code></pre>"},{"location":"Book/SICP/#combination","title":"Combination","text":"<p>combination = procedure How interpreter evaluates combination?</p> <ul> <li>evaluate subexpressions of combination</li> <li>apply operators to the arguments that are resulting values of subexpressions</li> </ul> <p>\u6b21\u306b\u5404\u6570\u5024\u306a\u3069\u306eprimitive expression\u3092\u8a55\u4fa1\u3059\u308b\u3002 \u5b9f\u306foperator\u3082\u5909\u6570\u306e\u7279\u6b8a\u7cfb\u307f\u305f\u3044\u306a\u3082\u306e\u3060\u3068\u8a00\u3048\u308b\u3002</p>"},{"location":"Book/SICP/#variable","title":"Variable","text":"<p>Variable is one of abstraction ways. It enables us to write more complex programs. \u5909\u6570\u3092\u4f7f\u3046\u305f\u3081\u306b\u3001memory\u306e\u3069\u3053\u304b\u306b\u8a18\u9332\u3057\u3066\u304a\u304f\u3002 \u305d\u306e\u5834\u6240\u3092'global environment'\u3068\u3044\u3046\u3002</p> <p><pre><code>(define size 2)\n</code></pre> <pre><code>flowchart LR\nenvironment-- determines --&gt;meaning-of-symbol</code></pre> \u3064\u307e\u308a\u8907\u96d1\u306a\u554f\u984c\u3082\u5206\u89e3\u3059\u308c\u3070\u3001\u7c21\u5358\u306b\u306a\u308b\u3002</p>"},{"location":"Book/SICP/#procedure-definitions","title":"Procedure definitions","text":"<p>\u624b\u9806\u306e\u8907\u5408\u4f53\u306b\u540d\u524d\u3092\u3064\u3051\u308b\u3053\u3068\u3002\u95a2\u6570\u7684\u306a\u30a4\u30e1\u30fc\u30b8\u3002</p> <p><pre><code>(define (&lt;name&gt; &lt;parameter&gt;) (&lt;body&gt;))\n</code></pre> procedure\uff08\u95a2\u6570\uff09\u3082\u7279\u6b8a\u306a\u5909\u6570\u306e\u3088\u3046\u306a\u3082\u306e\u3089\u3057\u3044\u3002 <pre><code>max(1.2, 4)\n# 4\n\nf = max\nf(1.2, 4)\n# 4\n#max\u306f\u4e00\u9023\u306e\u6700\u5927\u5024\u3092\u6c42\u3081\u308b\u624b\u7d9a\u304d\u3092\u8868\u3059\u5909\u6570\u3060\u3063\u305f\n</code></pre></p>"},{"location":"Book/SICP/#pure-function-vs-non-pure-function","title":"pure function vs non-pure function","text":"<ul> <li>pure function:<ul> <li>\u5165\u529b\u3092\u53d7\u3051\u53d6\u308a\u5024\u3092\u8fd4\u3059\u4ee5\u4e0a\u306e\u3053\u3068\u306f\u3057\u306a\u3044\u3002 <pre><code>flowchart LR\n-2 --&gt; id1[[abs]] --&gt; 2</code></pre></li> </ul> </li> <li>non-pure function:<ul> <li>\u5024\u3092\u8fd4\u3059\u4ee5\u5916\u306b\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3082\u3057\u304f\u306f\u30a4\u30f3\u30bf\u30fc\u30d7\u30ec\u30bf\u30fc\u306b\u5bfe\u3057\u3066\u526f\u52b9\u679c</li> </ul> </li> </ul> <p>\u4f8b\u3048\u3070print\u306f\u8fd4\u3059\u5024\u304c\u5f15\u6570\u306b\u95a2\u4fc2\u306a\u304fNone\u3092\u8fd4\u3059\u3002 <pre><code>print(1)\n# 1\n\na = print(1)\nprint(a)\n# None\n</code></pre></p>"},{"location":"Book/SICP/#applicative-order-evaluaion-and-normal-order-evaluation","title":"Applicative-order evaluaion and Normal-order evaluation","text":"<p>How interpreter recognizes your program?</p> applicative normal the arguments to procedure must be evaluated before the procedure is applied the arguments to a procedure aren't evaluated until the values needed"},{"location":"Book/SICP/#statemnent-vs-expression","title":"Statemnent vs Expression","text":"statement expression be executed be evaluated <p>e.g. of statement) def, return</p> <p>return\u304c\u306a\u3044\u95a2\u6570\u306f\u3069\u306e\u3088\u3046\u306a\u51e6\u7406\u304c\u3055\u308c\u308b\u306e\u304b\u3002 <pre><code>def square(x):\n    mul(x, x)\n</code></pre> return\u304c\u306a\u3044\u306e\u3067\u3001\u5b9f\u884c\u306f\u3055\u308c\u308b\u304c\u4f55\u3082\u8fd4\u3055\u306a\u3044\u3002print\u306e\u5834\u5408\u306f\u6709\u52b9\u3002 statement\u304c\u5404expression\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3057\u3066\u3044\u308b\u3002</p>"},{"location":"Book/SICP/#conditional","title":"Conditional","text":"<p><pre><code>(cond (&lt;p1&gt; &lt;e1&gt;)\n      (&lt;p2&gt; &lt;e2&gt;)\n      ...\n      (&lt;pn&gt; &lt;en&gt;))\n</code></pre> p: predicate. (T or F) e: subsequent expression</p> <ul> <li>and, or = non procedures. \u306a\u305c\u306a\u3089\u5f0f\u306e\u8a55\u4fa1\u9014\u4e2d\u3067\u51e6\u7406\u304c\u4e2d\u6b62\u3055\u308c\u3001\u5168\u3066\u306e\u5f15\u6570\u304c\u898b\u3089\u308c\u308b\u3053\u3068\u304c\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u304b\u3089\u3002</li> <li>not = procedures</li> </ul> <p>if vs cond</p> <p>In applicative-order evaluation, cond evaluates all arguments before the procedure. However, If firstly checks predicate and only evaluate the one side resulting expression (argument).</p> <p>python\u306e\u5834\u5408\u306f\u3001'header'\u3068\u547c\u3070\u308c\u308bstatement\u304c\u305d\u306e\u5f8c\u306b\u7d9a\u304fstatement\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3057\u3066\u3044\u308b\u3002\u4f8b\u3048\u3070while\u306a\u3069\u3002</p> <pre><code>&lt;header&gt;:\n    &lt;statement&gt;\n    &lt;statement&gt;\n       ...\n</code></pre>"},{"location":"Book/SICP/#mathematical-functions-vs-computer-procedures","title":"mathematical functions vs computer procedures","text":"math-function procedure \u7269\u4e8b\u306e\u7279\u6027 \u7269\u4e8b\u306e\u5b9f\u884c\u65b9\u6cd5 \u5ba3\u8a00\u7684\u77e5\u8b58 \u547d\u4ee4\u7684\u77e5\u8b58 what is how to"},{"location":"Book/SICP/#procedures-as-black-box","title":"procedures as black-box","text":"<p>procedure\u3092\u69cb\u6210\u3059\u308b\u30b5\u30d6\u624b\u7d9a\u304d\u3092black box\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u305d\u306e\u305f\u3081\u306b\u306f\u5404\u30b5\u30d6\u554f\u984c\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u304c\u5c40\u6240\u7684\u3067\u4ed6\u306e\u540c\u3058\u540d\u524d\u3068\u95a2\u4fc2\u306a\u3044\u72b6\u614b\u306b\u3042\u308b\u3079\u304d\u3002</p> <p>\u9650\u5b9a\u3055\u308c\u3066\u3044\u308b\u5909\u6570\u3092bound variable\u3068\u3044\u3046\u3002 \u9650\u5b9a\u3055\u308c\u3066\u3044\u308b\u7bc4\u56f2\u3092scope\u3068\u3044\u3046\u3002 free\u306fbound\u3068\u53cd\u5bfe\u306e\u610f\u5473\u3092\u6301\u3064\u3002\u4f8b\u3048\u3070'+'\u306ffree'\u3002</p> <pre><code>graph LR\nA[procedure] -- independent --&gt; B[bound variable]\nA -- dependent --&gt; C[free variable]</code></pre> <p>sqrt\u30921\u3064\u306b\u30d6\u30e9\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u5316\u3059\u308b\u3053\u3068\u3067\u3001\u30b5\u30d6\u554f\u984c\u3092\u81ea\u7531\u306a\u72b6\u614b\u304b\u3089\u3001\u9650\u5b9a\u7684\u306a\u72b6\u614b\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002block structure\u3068\u3044\u3046\u3002</p> <p>Before block structure <pre><code>flowchart TD\nA[sqrt] &lt;-- \u30d0\u30e9\u30d0\u30e9 --&gt; B[sqrt-iter]\nB &lt;--&gt; C[good-enough?]\nC &lt;--&gt; D[improve]</code></pre></p> <p>After block structure <pre><code>define sqrt\n    define improve\n    define good-enough?\n    define sqrt-iter\n</code></pre> sqrt\u306e\u4e2d\u306b\u9589\u3058\u8fbc\u3081\u3089\u308c\u308b\u3053\u3068\u3067\u3001\u30b5\u30d6\u554f\u984c\u304c\u5c40\u6240\u5316\u3057\u305f\u3002 \u307e\u305fsqrt\u306e\u5f15\u6570x\u306f\u5185\u90e8\u7bc4\u56f2\u5185\u3067free variable\u5316\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30b5\u30d6\u554f\u984c\u3067\u5f15\u6570\u3068\u3057\u3066x\u3092\u660e\u793a\u3059\u308b\u5fc5\u8981\u306f\u306a\u304f\u306a\u3063\u305f\u3002</p>"},{"location":"Book/SICP/#high-order-function","title":"High-order function","text":""},{"location":"Book/SICP/#high-order-function3","title":"High-order function\u306e3\u3064\u306e\u6a5f\u80fd","text":"<ol> <li>Functions as arguments</li> <li>Nested definitions</li> <li>Functions as return values</li> </ol>"},{"location":"Book/SICP/#functions-as-arguments","title":"Functions as arguments","text":"<p>sum\u3068\u3044\u3046\u6982\u5ff5\u306e\u5171\u901a\u5316\u3092high-order function\u306f\u53ef\u80fd\u306b\u3059\u308b\u3002 <pre><code>def summation(n, term):\n    total, k = 0, 1\n    while k &lt;= n:\n        total = total + term(k). #term\u306b\u4efb\u610f\u306e\u95a2\u6570\u3092\u5f53\u3066\u308b\n        k = k + 1\n    return total\n</code></pre></p> <p>\u4e00\u822c\u7684\u306a\u95a2\u6570\u3068high-order function\u306e\u9055\u3044</p> <p>ordinary function   &lt;--independent--&gt;   specific numbers high-order function &lt;--independent--&gt;   specific function</p> <p>&lt;\u4f8b\uff1a\u53cd\u5fa9\u6539\u5584\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0&gt;</p> <pre><code>def improve(update, close, guess=1):\n    while not close(guess):\n        guess = update(guess)\n    return guess\n</code></pre>"},{"location":"Book/SICP/#nested-definitions","title":"Nested definitions","text":"<p>\u4f55\u304c\u5b09\u3057\u3044\u306e\u304b\uff1f <pre><code>flowchart TD\nA[\u89e3\u6c7a] --&gt; B[\u53d6\u308c\u308b\u5f15\u6570\u306e\u6570\u306e\u5236\u7d04]\nA --&gt; C[global environment\u3067\u306e\u95a2\u6570\u540d\u306e\u885d\u7a81]</code></pre></p> <p>nested definition\u306e\u5834\u5408\u3001environment\u306f\u3069\u306e\u3088\u3046\u306a\u72b6\u614b\u306b\u306a\u308b\u304b\uff1f</p> <pre><code>def approx_sqrt(a):\n    \"\"\"Return approximate square root of a\n\n    &gt;&gt;&gt; assert approx_eq(sqrt(25), 5)\n    &gt;&gt;&gt; assert approx_eq(sqrt(4), 2)\n    &gt;&gt;&gt; assert approx_eq(sqrt(0), 0)\n    \"\"\"\n    def average(x, y):\n        return (x + y) / 2\n\n    def sqrt_update(x, a):\n        return average(x, a / x)\n\n    def sqrt_close(x, a):\n        return approx_eq(x * x, a)\n\n    return improve(sqrt_update, sqrt_close, a)\n</code></pre> <ul> <li>\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u306f\u5fc5\u305a'parent environment'\u3092\u6301\u3064\uff08\u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u305f\u74b0\u5883\uff09\u3002e.g. spart_update\u306e\u5834\u5408\u3001approx_sqrt\u74b0\u5883\u3002</li> <li>\u547c\u3073\u51fa\u3055\u308c\u305f\u6642\u3001\u305d\u306e\u95a2\u6570\u306e\u30ed\u30fc\u30ab\u30eb\u30d5\u30ec\u30fc\u30e0\u306f\u3001\u81ea\u8eab\u306e\u74b0\u5883\u3068global environment\u306e2\u3064\u306b\u62e1\u5f35\u3055\u308c\u308b\u3002</li> </ul> <p>\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u968e\u5c64\u69cb\u9020\u306b\u306a\u308b\u3002</p> <pre><code>global\n    improve\n    sqrt\n        average\n        sqrt_update\n        sqrt_close\n</code></pre> <p>sqrt_update\u304c\u4f7f\u3046\u3053\u3068\u306e\u3067\u304d\u308b\u74b0\u5883\u306f3\u3064\u3002</p> <ol> <li>sqrt_update\u74b0\u5883</li> <li>sqrt\u74b0\u5883</li> <li>global\u74b0\u5883</li> </ol>"},{"location":"Book/SICP/#functions-as-return-values","title":"Functions as return values","text":""},{"location":"Book/SICP/#functional-composition","title":"functional composition","text":"<p>\u95a2\u6570\u3092\u8fd4\u3059\u95a2\u6570\u3002</p> <p>e.g) <pre><code>f(x), g(x)\n|\n|\nnew h(x) = f(g(x))\n</code></pre> <pre><code>def compose(f, g):\n    def h(x):\n        return f(g(x))\n    return h\n\nassert compose(square, add)(12) == square(add(12))\n</code></pre></p>"},{"location":"Book/SICP/#currying","title":"Currying","text":"<p>\u95a2\u6570\u30921\u3064\u306e\u5f15\u6570\u306e\u307f\u3092\u53d6\u308b\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u76f4\u3059\u3053\u3068\u3002</p> <pre><code>def curry_pow(x):\n    def h(y):\n        return pow(x, y)\n    return h\n\n# \u4e00\u822c\u5316\ndef curry2(f);\n    def h(x):\n        def g(y):\n            return f(x, y)\n        return g\n    return h\n\n# curry\u5316\u3092\u89e3\u9664 h(x)(y) -&gt; f(x, y)\ndef uncurry2(h):\n    def f(x, y):\n        return h(x)(y)\n    return f\n\nassert uncurry2(curry2(f)) == f\nassert uncurry2(curry_pow(x)(y)) == pow(x, y)\n</code></pre>"},{"location":"Book/SICP/#lambda","title":"lambda","text":"<p>\u540d\u524d\u3092\u3064\u3051\u3065\u306b\u95a2\u6570\u306e\u6a5f\u80fd\u3092\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002python\u304b\u3089\u306flambda object\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u3066\u3044\u308b\u3002 return\u6587\u306f1\u3064\u3057\u304b\u53d6\u308c\u306a\u3044\u3002\u307e\u305f\u4ee3\u5165\u3084\u5236\u5fa1\u6587\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u306a\u3044\u3002</p> <pre><code>lambda &lt;argument&gt; : &lt;return-expression&gt;\n</code></pre>"},{"location":"Book/SICP/#function-decorator","title":"Function decorator","text":"<p>High-order function\u306e\u52b9\u679c\u3092\u4ed6\u306e\u95a2\u6570\u306b\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 High-order function\u306e\u5f15\u6570\u306b\u4ed6\u306e\u95a2\u6570\u3092\u5165\u308c\u308b\u3053\u3068\u3068\u540c\u3058\u52b9\u679c\u304c\u3042\u308b\u3002</p> <pre><code>def trace(f):\n    def wrapped(x):\n        print('f', '(', x, ')')\n        return f(x)\n    return wrapped\n\n@trace  # decorator\ndef triple(x):\n    return 3 * x\n# triple -&gt; trace(triple)\n</code></pre>"},{"location":"Book/SICP/#12-procedures-and-the-processes-they-generate","title":"1.2 Procedures and the Processes They Generate","text":""},{"location":"Book/SICP/#linear-recursion-vs-iteration","title":"Linear Recursion vs Iteration","text":"<p>\u968e\u4e57\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u8868\u73fe\u3059\u308b\u3002 \\(n! = {n(n-1)(n-2)...3 *2*1}\\) \u307e\u305f\u306f \\(n! = n * (n-1)!\\)</p> <p>Linear recursion process <pre><code>(define (factorial n)\n    (if (= n 1)\n    1\n    (* n (factorial (- n 1)))))\n</code></pre></p> <p>linear iterative process <pre><code>(define (factorial n)\n  (fact-iter 1 1 n))\n\n(define (fact-iter product counter max-count)\n  (if (&gt; counter max-count)\n      product\n      (fact-iter (* counter product)\n                 (+ counter 1)\n                 max-count)))\n</code></pre></p> Linear recursion process linear iterative process n\u304c1\u5897\u3048\u308b\u306b\u3064\u308c\u3066\u8a18\u9332\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u60c5\u5831\u91cf\u304c1\u5897\u3048\u308b\u3002\u56f3\u306b\u3057\u3066\u307f\u308b\u3068\u53f3\u306b\u51fa\u5f35\u3063\u305f2\u6b21\u95a2\u6570\u307f\u305f\u3044\u306b\u306a\u308b\u3002 n\u304c1\u5897\u3048\u308b\u306b\u3064\u308c\u3066\u30eb\u30fc\u30d7\u4e2d\u306e\u51e6\u7406\u304c1\u3064\u5897\u3048\u308b\u3002\u3057\u304b\u3057n\u306e\u5927\u304d\u3055\u306b\u95a2\u4fc2\u306a\u304f\u3001\u5fc5\u8981\u3068\u3059\u308b\u5909\u6570\u306f\u4e00\u5b9a\u3002 <p>recursive 'process' \u2260 recursive 'procedure' | process | procedure | |--|--| | not about syntax. how the process evolves | syntactically the procedure call itself   |</p> <p>iterative process\u306f3\u3064\u306e\u8981\u7d20\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u308b\u3002 \u56fa\u5b9a\u30eb\u30fc\u30eb\u3001\u56fa\u5b9a\u3055\u308c\u305f\u6570\u306e\u5909\u6570\u3001\u30eb\u30fc\u30d7\u7d42\u4e86\u6761\u4ef6\u3002</p>"},{"location":"Book/SICP/#tree-recursion","title":"Tree Recursion","text":"<p>Think about fibonacci numbers like 0, 1, 2, 3, 5, 8, 13, ... \\(n = (n-2)(n-1)\\) $$ \\begin{aligned} &amp;F_0 = 0, \\ &amp;F_1 = 1, \\ &amp;F_n = F_{n-1} + F_{n-2} \\quad \\text{for } n &gt; 1. \\end{aligned} $$</p> <p>To express this, most easiest way is to use tree recursion. <pre><code>(define (fib n)\n  (fib-iter 1 0 n))\n\n(define (fib-iter a b count)\n  (if (= count 0)\n      b\n      (fib-iter (+ a b) a (- count 1))))\n</code></pre> - \u6027\u8cea     - \u6728\u306e\u3088\u3046\u306b\u4e0b\u306b\u5411\u304b\u3063\u3066\u679d\u5206\u304b\u308c\u3057\u3066\u3044\u304f\u69cb\u9020     - \u5404\u7bc0\u306e\u6570\uff08\u8a08\u7b97\u91cf\uff09\u306f\u5165\u529b\u306b\u5bfe\u3057\u3066\u6307\u6570\u7684\u306b\u5897\u3048\u308b     - \u6df1\u3055\uff08\u30e1\u30e2\u30ea\u6d88\u8cbb\uff09\u306f\u5165\u529b\u306b\u5bfe\u3057\u3066\u7dda\u5f62\u306b\u5897\u52a0\u3059\u308b</p> <p>linear iterative process\u3092\u4f7f\u3046\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002 <pre><code>(define (fib n)\n  (fib-iter 1 0 n))\n\n(define (fib-iter a b count)\n  (if (= count 0)\n      b\n      (fib-iter\n            (+ a b)\n            a\n</code></pre> \u5fc5\u8981\u306a\u5909\u6570\u306f3\u3064\u306e\u307f\u3002\u307e\u305f\u8a08\u7b97\u91cf\u306f\u5165\u529bn\u306b\u5bfe\u3057\u3066\u7dda\u5f62\u7684\u306b\u5897\u3048\u308b\u3060\u3051\u3002</p>"},{"location":"Book/SICP/#partition-problems","title":"Partition problems","text":"<p>\u554f\u984c\uff1a</p> <ul> <li>\u3042\u308b\u4efb\u610f\u306e\u6b63\u306e\u6574\u6570n\u3068\u3059\u308b\u3002n\u3088\u308a\u5c0f\u3055\u3044\u6b63\u306e\u6574\u6570m\u306e\u8db3\u3057\u7b97\u3067n\u3092\u5206\u5272\u3057\u3066\u8868\u73fe\u3059\u308b\u65b9\u6cd5\u306f\u4f55\u901a\u308a\u3042\u308b\u304b\u3002</li> </ul> <p>\u89e3\u6cd5\uff1a n\u3092\u6700\u5927m\u3067\u5206\u5272\u3059\u308b\u554f\u984c\u306f\u4ee5\u4e0b\u306e2\u3064\u306e\u554f\u984c\u306b\u5206\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002</p> <ol> <li>n - m\u3092\u6700\u5927m\u3067\u5206\u5272\u3059\u308b\u65b9\u6cd5\u306e\u6570\uff08m\u3092\u4f7f\u3063\u305f\u4e16\u754c\u7dda\uff09</li> <li>n \u3092\u6700\u5927m - 1\u3067\u5206\u5272\u3059\u308b\u65b9\u6cd5\u306e\u6570\u3000\uff08m\u3092\u4f7f\u308f\u306a\u304b\u3063\u305f\u4e16\u754c\u7dda\uff09</li> </ol> <p>\u30d9\u30fc\u30b9\u30b1\u30fc\u30b9\u306f\u4ee5\u4e0b\u306e3\u3064</p> <ol> <li>0\u3092m\u3067\u5206\u5272\u3059\u308b\u65b9\u6cd5\u306f1\u901a\u308a</li> <li>\u8ca0\u306e\u6574\u6570\u3092m\u3067\u5206\u5272\u3059\u308b\u65b9\u6cd5\u306f0\u901a\u308a</li> <li>n\u30920\u3067\u5206\u5272\u3059\u308b\u65b9\u6cd5\u306f0\u901a\u308a</li> </ol> <pre><code>def partition(n, m):\n    if n == 0:\n        return 1\n    elif n &lt; 0:\n        return 0\n    elif m - 1 == 0:\n        return 0\n    else:\n        return partition(n - m, m) + partition(n, m - 1)\n</code></pre>"},{"location":"Book/SICP/#_1","title":"\u4e21\u66ff\u554f\u984c","text":"<p>\u4efb\u610f\u306e\u91d1\u984d\u3092\u4e0e\u3048\u3089\u308c\u305f\u7a2e\u985e\u306e\u30b3\u30a4\u30f3\u3092\u4f7f\u3063\u3066\u4e21\u66ff\u3059\u308b\u65b9\u6cd5\u306e\u6570\u3092\u8a08\u7b97\u305b\u3088\u3002</p> <p>(\u30b3\u30a4\u30f3\u306e\u7a2e\u985e\u306f\u300150\u30bb\u30f3\u30c8, 25\u30bb\u30f3\u30c8, 10\u30bb\u30f3\u30c8, 5 \u30bb\u30f3\u30c8, 1\u30bb\u30f3\u30c8\u3068\u3059\u308b\u3002 )</p> <p>\u65b9\u91dd\uff1b\u518d\u5e30\u7684\u306a\u30d7\u30ed\u30bb\u30b9\u3092\u4f7f\u3046</p> <p>\u30d9\u30fc\u30b9\u30b1\u30fc\u30b9\uff08\u6700\u7d42\u5730\u70b9\uff09  - \u786c\u8ca8\u306e\u7a2e\u985e = 0\u306a\u3089\u30010\u901a\u308a\uff08\u4e21\u66ff\u3067\u304d\u306a\u3044\uff09  - \u91d1\u984d &lt; 0\u306a\u3089\u30010\u901a\u308a  - \u91d1\u984d = 0\u306a\u3089\u30011\u901a\u308a\uff08\u4f55\u3082\u4f7f\u308f\u306a\u3044\uff09 \u6700\u7d42\u7684\u306b\u306f\u30d9\u30fc\u30b9\u30b1\u30fc\u30b9\u307e\u3067\u554f\u984c\u3092\u5206\u5272\u3057\u3066\u3044\u304f\u3053\u3068\u3092\u76ee\u6307\u3059\u3002</p> <p>\u5206\u5272\u3057\u3066\u3044\u304f\u65b9\u6cd5\uff1a n\u7a2e\u985e\u306e\u786c\u8ca8\u3001\u5206\u5272\u3059\u308b\u91d1\u984d\u3092a\u3068\u3059\u308b\u3002 \u30b3\u30a4\u30f3\u306e\u7a2e\u985e\u3092\u5c0f\u3055\u3044\u3082\u306e\u304b\u3089\u9806\u756a\u306b\u4e26\u3079\u3066\u304a\u304f\u3002 \u5168\u3066\u306e\u4e21\u66ff\u6cd5\u306e\u6570\u306f\u4ee5\u4e0b\u306e\u4e8c\u3064\u306b\u5206\u5272\u3055\u308c\u308b\u3002  1. \u6700\u521d\u306e\u7a2e\u985e\u306e\u30b3\u30a4\u30f3\u3092\u4f7f\u308f\u306a\u3044\u4e16\u754c\u7dda      - \u91d1\u984da\u3092(n - 1)\u7a2e\u985e\u306e\u30b3\u30a4\u30f3\u3067\u4e21\u66ff\u3059\u308b\u65b9\u6cd5\u306e\u6570  2. \u6700\u521d\u306e\u30b3\u30a4\u30f3\u3092\u6700\u4f4e\u3067\u30821\u679a\u4ee5\u4e0a\u4f7f\u3046\u4e16\u754c\u7dda      - \u91d1\u984d(a -d)\u3092n\u7a2e\u985e\u306e\u30b3\u30a4\u30f3\u3092\u4f7f\u3063\u3066\u4e21\u66ff\u3059\u308b\u65b9\u6cd5\u306e\u6570(d\u306f\u30b3\u30a4\u30f3\u306e\u984d\u9762\u91d1\u984d)</p> <p>1\u30682\u3092\u30d9\u30fc\u30b9\u30b1\u30fc\u30b9\u306b\u5230\u9054\u3059\u308b\u307e\u3067\u9069\u7528\u3057\u7d9a\u3051\u308b\u30d7\u30ed\u30bb\u30b9\u306f\u3001tree recursion\u306b\u306a\u3063\u3066\u3044\u308b\u30022\u3067(a - d)\u3068\u306a\u308b\u7406\u7531\u306f\u3001\u6700\u521d\u306e\u7a2e\u985e\u306e\u30b3\u30a4\u30f3\u3092\u6700\u4f4e\u3067\u30821\u679a\u4f7f\u3046\u3053\u3068\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u304b\u3089\u3067\u3042\u308b\u3002</p>"},{"location":"Book/SICP/#_2","title":"\u30d0\u30b0\u306e\u898b\u3064\u3051\u65b9","text":"<p>\u624b\u9806</p> <ol> <li>\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b</li> <li>\u30c4\u30fc\u30eb\u3092\u4f7f\u3044\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6d41\u308c\u3092\u8ffd\u3046</li> <li>\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u5165\u308c\u308b</li> </ol>"},{"location":"Book/SICP/#_3","title":"\u5fc3\u69cb\u3048","text":"<ol> <li>test incrementally</li> <li>isolate errors</li> <li>check your assumption</li> <li>consult others</li> </ol>"},{"location":"Book/SICP/#_4","title":"\u30c7\u30d0\u30c3\u30b0\u306e\u65b9\u91dd","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u89e3\u91c8\u3059\u308binterpreter\u304c\u3069\u306e\u3088\u3046\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u304f\u304b\u3092\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u3053\u3053\u307e\u3067\u3001\u5148\u306b\u90e8\u5206\u5f0f\u3092\u6c42\u3081\u308bapplicatvie-order\u3068\u5fc5\u8981\u306b\u306a\u308b\u307e\u3067\u90e8\u5206\u5f0f\u3092\u6c42\u3081\u306a\u3044normal-order\u3092\u5b66\u3093\u3060\u3002 \u4e21\u65b9\u306e\u65b9\u6cd5\u306b\u5171\u901a\u3057\u3066\u3044\u308b\u306e\u304c\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u300c\u5206\u89e3\u300d\u3055\u308c\u3066\u3044\u304f\u904e\u7a0b\u3067\u3042\u308b\u3002</p> <p>\u30c7\u30d0\u30c3\u30b0\u30c4\u30fc\u30eb\u3067\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6d41\u308c\u3092\u63b4\u3080\u52a9\u3051\u3092\u3057\u3066\u304f\u308c\u308b\u3002 \u3042\u308b\u5f0f\u3092\u8a55\u4fa1\u3057\u3066\u3044\u308b\u6642\u70b9\u3092\u30ec\u30d9\u30eb0\u3068\u3057\u3066\u3001\u904e\u53bb\u306b\u9061\u3063\u3066\u3044\u304f\u306b\u3064\u308c\u3066\u30ec\u30d9\u30eb\u304c1\u3065\u3064\u4e0a\u304c\u308b\u3088\u3046\u306b\u3059\u308b\u3002subproblem level\u3068\u3044\u3046\u3002</p>"},{"location":"Book/booklist/","title":"Booklist","text":""},{"location":"Book/booklist/#unread","title":"Unread","text":"<ul> <li>CRACKING the CODING INTERVIEW</li> <li>Computer Systems A Programmer's Perspective)</li> </ul>"},{"location":"Book/booklist/#reading","title":"Reading","text":"<ul> <li>Grokking Algorithms</li> <li>How to Solve It</li> <li>The Algorithm Design Manual</li> <li>7\u3064\u306e\u7fd2\u6163</li> </ul>"},{"location":"Book/booklist/#finished","title":"Finished","text":"<ul> <li>C book </li> </ul>"},{"location":"Book/modern-c/","title":"Modern-C","text":""},{"location":"Book/modern-c/#level-1","title":"Level-1","text":"<ul> <li>Syntax and semantics</li> </ul> <pre><code>flowchart LR\nA[Semantic] --&gt; B[Declaration]\nA           --&gt; C[Definition]\nA           --&gt; D[Statements]</code></pre> <pre><code>flowchart LR\nDeclaration -- specify --&gt; Identifiers\nDefinition  -- specify --&gt; Objects</code></pre> <ul> <li>Object must have one definition</li> <li>Statements: instructions to tell what to do</li> <li>pointer: box sotres memory address of something</li> <li><code>const name</code>: name becomes \"immutable\"</li> </ul> Call by value Call by reference functions cannot change value of arguments functions can change argument's values Signed int Unsigned int Contain negative integer (e.g. 0000 ~ 1111 =&gt; -8 ~ 7) Contain only positive integer (e.g. 0000 ~ 1111 =&gt; 0 ~ 15) <ul> <li>Unsigned arithmetic has valid results except results overflow</li> </ul>"},{"location":"Book/modern-c/#pointers","title":"Pointers","text":"<ul> <li>Address and type</li> <li>address: location in memory</li> <li> <p>type: how this data is interpreted</p> </li> <li> <p>syntax</p> </li> </ul> <pre><code>// declaration\n*identifierP\n// let a pointer point to variable x\nidentifierP = &amp;x;\n// *A is a object which A points to\ny = *identifier // y = x\n</code></pre>"},{"location":"Misc/LLM_prompt/","title":"LLM prompt","text":"IT expert (question) I want you to act as an IT Expert. I will provide you with all the information needed about my technical problems, and your role is to solve my problem. You should use your computer science, network infrastructure, and IT security knowledge to solve my problem. Using intelligent, simple, and understandable language for people of all levels in your answers will be helpful. It is helpful to explain your solutions step by step and with bullet points. Give me a example if it is helpful.Please think step-by-step and explain your reasoning. Explain content Please explain X by an understandable way based on the below content.(content) Answer and its explanation Please explain the answer for the following question."},{"location":"Misc/LLM_prompt/#best-practices-by-google","title":"Best practices by google","text":"<ol> <li> <p>Clearly communicate what content or information is most important.</p> </li> <li> <p>Structure the prompt: Start by defining its role, give context/input data, then provide the instruction.</p> </li> <li> <p>Use specific, varied examples to help the model narrow its focus and generate more accurate results.</p> </li> <li> <p>Use constraints to limit the scope of the model's output. This can help avoid meandering away from the instructions into factual inaccuracies.</p> </li> <li> <p>Break down complex tasks into a sequence of simpler prompts.</p> </li> <li> <p>Instruct the model to evaluate or check its own responses before producing them. (\"Make sure to limit your response to 3 sentences\", \"Rate your work on a scale of 1-10 for conciseness\", \"Do you think this is correct?\").</p> </li> </ol>"},{"location":"Misc/wish_list/","title":"Wish list","text":""},{"location":"Misc/wish_list/#-ipad-4","title":"- ipad (\u30ce\u30fc\u30c8\u3092\u6301\u3061\u6b69\u304b\u306a\u304f\u3066\u6e08\u3080)\u30024\u4e07\u5186\u304f\u3089\u3044\u306a\u3089\u8cb7\u3046\u3002","text":""},{"location":"Misc/%E3%82%84%E3%82%8A%E3%81%9F%E3%81%84%E3%81%93%E3%81%A8/","title":"\u3084\u308a\u305f\u3044\u3053\u3068","text":"<ul> <li>\u624b\u5e33\u306b\u7fd2\u6163\u3092\u66f8\u304f\u3053\u3068</li> <li>\u8131\u51fa\u30b2\u30fc\u30e0</li> <li>\u6c96\u7e04\u884c\u304d\u305f\u3044</li> <li>\u30ad\u30e3\u30cb\u30aa\u30cb\u30f3\u30b0\u3057\u305f\u3044\uff08\u30dc\u30fc\u30c8\u3067\u5ddd\u4e0b\u308a\uff09</li> <li>\u30ab\u30b8\u30ce\u884c\u304d\u305f\u3044</li> <li>\u7af6\u99ac\u5834\u306b\u884c\u304d\u305f\u3044</li> </ul>"},{"location":"Misc/%E7%AC%AC%E4%BA%8C%E8%A8%80%E8%AA%9E%E7%BF%92%E5%BE%97%E7%90%86%E8%AB%96/","title":"\u7b2c\u4e8c\u8a00\u8a9e\u7fd2\u5f97\u7406\u8ad6","text":""},{"location":"Misc/%E7%AC%AC%E4%BA%8C%E8%A8%80%E8%AA%9E%E7%BF%92%E5%BE%97%E7%90%86%E8%AB%96/#-","title":"- \u79d1\u5b66\u8ad6\u6587\u306b\u5f79\u7acb\u3064\u82f1\u8a9e","text":"<ul> <li>https://www.nihongo-appliedlinguistics.net/wp/archives/3508</li> <li>https://ja.wikipedia.org/wiki/%E7%AC%AC%E4%BA%8C%E8%A8%80%E8%AA%9E%E7%BF%92%E5%BE%97%E3%81%AE%E7%90%86%E8%AB%96</li> <li>https://www.meiji.ac.jp/ggjs/6t5h7p00003fs1ki-att/a1667373243788.pdf</li> <li>https://pg.tsuda.ac.jp/lecture/Inagaki_201602.html</li> <li>https://gssc.dld.nihon-u.ac.jp/wp-content/uploads/journal/pdf21/21-261-272-Akagi.pdf</li> </ul>"},{"location":"Misc/Korean/Plan/","title":"Plan","text":"<ul> <li>goal: \u53cb\u9054\u3068\u97d3\u56fd\u8a9e\u3067\u4f1a\u8a71\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b (\u97d3\u56fd\u4eba\u306e\u5f7c\u5973\u6b32\u3057\u3044)</li> <li>\u52c9\u5f37\u3059\u308b\u9806\u756a: \u30cf\u30f3\u30b0\u30eb -&gt; \u6587\u6cd5 -&gt; \u5358\u8a9e -&gt; \u767a\u97f3</li> <li>\u30cf\u30f3\u30b0\u30eb: 11/8 - 11/10</li> <li>\u6587\u6cd5:  11/9 - 11/19</li> <li>\u5358\u8a9e: 12/19 - 12/29</li> <li>\u4f1a\u8a71: ~</li> </ul> <p>TODO: anki\u306b\u5358\u8a9e\u306a\u3069\u306e\u6697\u8a18\u7cfb\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u79fb\u884c\u3059\u308b</p> <p>Timeline: - 11/9:    \u81ea\u5206\u306e\u540d\u524d\u3092\u97d3\u56fd\u8a9e\u3067\u66f8\u3044\u305f\u3002\u57fa\u672c\u7684\u306a\u5358\u8a9e\u3092\u77e5\u3063\u305f\u3002 - 11/10:   \u57fa\u672c\u306e\u52d5\u8a5e\u3001\u5f62\u5bb9\u8a5e\u3092\u6697\u8a18 - 11/11:    \u5f62\u5bb9\u8a5e\u3001\u52a9\u8a5e - 11/13:   \u6642\u3092\u8868\u3059\u5358\u8a9e - 11/14:   \u5358\u8a9e\u306e\u30af\u30a4\u30ba - 11/15:   \u5358\u8a9e\u306e\u30af\u30a4\u30ba - 11/16:   \u65e5\u5e38\u4f1a\u8a71\u3092\u899a\u3048\u305f - 11/18:   \u65e5\u5e38\u4f1a\u8a71\u3068\u95a2\u9023\u3059\u308b\u5358\u8a9e\u3092\u77e5\u3063\u305f - 11/21:    \u5358\u8a9e\u3092\u899a\u3048\u305f - 11/22:    \u7dcf\u5fa9\u7fd2\u30c6\u30b9\u30c8\uff08\u6b21\u306f\u52a9\u8a5e\u306e\u78ba\u8a8d\u30c6\u30b9\u30c8\uff09 - 11/26:    \u767a\u97f3\u306e\u4ed5\u65b9\u3092\u5fa9\u7fd2\u3057\u3066\u3044\u305f\u3002Next: \u6559\u79d1\u66f8\u3067\u767a\u97f3\u3092\u5fa9\u7fd2\u3002\u305d\u3057\u3066\u7dcf\u5fa9\u7fd2\u30c6\u30b9\u30c8\u3092\u53d7\u3051\u308b - 11/28:    \u9774\u306e\u30b5\u30a4\u30ba\u3092\u97d3\u56fd\u8a9e\u3067 - 11/29:\u3000\u5358\u8a9e\u3092\u5fa9\u7fd2\u3057\u305f - 11/30:\u3000\u5358\u8a9e\u306e\u5fa9\u7fd2\u3002\u30c6\u30b9\u30c8\u3092\u7d42\u308f\u3089\u305b\u305f\u3002\u30d1\u30c3\u30c1\u30e0\u306b\u3064\u3044\u3066\u5b66\u3093\u3060\u3002 - 11/30:    \u6587\u6cd5\u3092\u77e5\u308b\u3002\u30d8\u30e8\u4f53\u304b\u3089(https://chibikani.com/category/study/grammar/page/9) - 12/3:\u5358\u8a9e\u306e\u5fa9\u7fd2\u3002\u30d8\u30e8\u4f53\u306e\u7d9a\u304d\u3002\u30d8\u30e8\u4f53\u306e\u4f8b\u5916\u304b\u3089 - 12/4:\u30d8\u30e8\u4f53\u7d42\u4e86\u3002[\u97d3\u56fd\u8a9e\u305f\u307e\u3054\u3063\u3061][https://www.youtube.com/watch?v=uXCluhky1JA&amp;list=PLpBUGc9zmlBcx6YYlEtxyCNlox70ehTS4&amp;index=3]&lt;-\u3053\u3053\u307e\u3067\u898b\u305f - 12/5:\u97d3\u56fd\u8a9e\u305f\u307e\u3054\u3063\u3061 - 12/8:\u30d8\u30e8\u4f53\u3092\u5fa9\u7fd2\u3057\u3088\u3046 - </p>"},{"location":"Misc/Korean/Plan/#finished-content","title":"Finished content","text":""},{"location":"Misc/Korean/Plan/#-httpssusumekrcombeginner-day7","title":"- https://susumekr.com/beginner-day7/","text":""},{"location":"Misc/Korean/%E6%97%A5%E5%B8%B8%E4%BC%9A%E8%A9%B1/","title":"\u65e5\u5e38\u4f1a\u8a71","text":""},{"location":"Misc/Korean/%E6%97%A5%E5%B8%B8%E4%BC%9A%E8%A9%B1/#_1","title":"\u3042\u3044\u3055\u3064","text":"\uc548\ub155\ud788 \uac00\uc138\uc694 \u3055\u3088\u3046\u306a\u3089\uff08\u76f8\u624b\u304c\u53bb\u308b\uff09 \uc548\ub155\ud788 \uacc4\uc138\uc694 \u3055\u3088\u3046\u306a\u3089\uff08\u81ea\u5206\u304c\u53bb\u308b\uff09 \uc774\ub984\uc774 \ubb50\uc608\uc694? \u540d\u524d\u306f\u4f55\u3067\u3059\u304b\uff1f \ubbf8\uc548\ud569\ub2c8\ub2e4 \u3054\u3081\u3093\u306a\u3055\u3044 \uc800\uae30\uc694 \u4eba\u3092\u547c\u3073\u6b62\u3081\u308b\u6642 \uad1c\ucc2e\uc544\uc694 \u5927\u4e08\u592b\u3067\u3059 \uc544\ub2c8\uc624/\uc544\ub1e8 \u3044\u3044\u3048 \ub9cc\ub098\uc11c \ubc18\uac11\uc2b5\ub2c8\ub2e4 \u521d\u3081\u307e\u3057\u3066\uff08\u6700\u3082\u4e01\u5be7\uff09\ub9cc\ub098\uc11c \ubc18\uac00\uc6cc\uc694\uff08\u4e01\u5be7\uff09 \uc694 1. \u301c\u3067\u3059\u30882. \u3053\u306e\u3001\u3053\u3053\u3001\u3053\u308c \ub610 \ub9cc\ub098\uc694 \u307e\u305f\u4f1a\u3044\u307e\u3057\u3087\u3046 <p>\ucee4\ud53c\ub97c \ub9c8\uc154\uc694\uff1a\u30b3\u30fc\u30d2\u30fc\u3092\u98f2\u307f\u307e\u3057\u3087\u3046</p> <p>\uc774\uac70 285\u00a0\uc788\uc5b4\uc694? \uc0ac\uc774\uc988\ub294\u00a0 285 \uc785\ub2c8\ub2e4 (\u30b5\u30a4\u30ba\u306f285) 285 \uc774\ubc31\ud314\uc2ed\uc624\uff08\u30a4\u30d9\u30af\u30d1\u30eb\u30b7\u30dc\u30fc\uff09</p>"},{"location":"Misc/Korean/%E7%99%BA%E9%9F%B3/","title":"\u767a\u97f3","text":"<p>\u767a\u97f3</p>"},{"location":"Misc/Korean/%E8%81%9E%E3%81%8D/","title":"\u805e\u304d","text":"<ul> <li>NHK WORLD RADIO JAPAN News (in Korean)</li> <li>\u300e\u97d3\u56fd\u8a9e\u5148\u751f\u3068\u6bce\u65e5\u97d3\u56fd\u8a9e\u7df4\u7fd2\u300f</li> </ul>"},{"location":"OSS/contribution/","title":"OSS contributions","text":""},{"location":"OSS/contribution/#mypy","title":"Mypy","text":"<ul> <li>Make changelog visible in a mypy official document</li> </ul>"},{"location":"OSS/contribution/#candinates","title":"Candinates","text":"<ul> <li>foos asia</li> <li>Linux Mentorship Programs &lt;- Spring Term: March 1st - May 31st (\u7533\u8fbc\u306f2\u9031\u9593\u524d\u304f\u3089\u3044\u304b\u3089)</li> </ul>"},{"location":"OSS/Side_project/%E8%87%AA%E5%8B%95%E3%81%A7liberal%20attendance%E3%82%92%E3%81%99%E3%82%8Bscript/","title":"Requirements","text":"<ul> <li>\u9ad8\u9e97\u5927\u5b66\u3067\u306eliberal attendance\u3092\u81ea\u52d5\u5316\u3059\u308b</li> <li>\u8a00\u3044\u63db\u3048\u308b\u3068\u3001browser\u3067\u306e\u4f5c\u696d\u3092\u5b9a\u3081\u305f\u6642\u9593\u306b\u5b9f\u884c\u3059\u308b</li> <li>Button\u3092\u62bc\u3059\u306b\u306fjava script\u304c\u5fc5\u8981\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u3001\u4eee\u306e\u76ee\u6a19\u306f\u76ee\u7684\u306e\u30da\u30fc\u30b8\u3092\u958b\u304f\u3053\u3068</li> <li>Browser: Brave (chrome based)</li> <li>OS: Mac</li> </ul>"},{"location":"OSS/Side_project/%E8%87%AA%E5%8B%95%E3%81%A7liberal%20attendance%E3%82%92%E3%81%99%E3%82%8Bscript/#easy-but-not-flexible-solution","title":"Easy but not flexible solution","text":"<ul> <li>Chrome extension (Auto Page Opener)</li> <li>Option for chrome based</li> </ul>"},{"location":"OSS/Side_project/%E8%87%AA%E5%8B%95%E3%81%A7liberal%20attendance%E3%82%92%E3%81%99%E3%82%8Bscript/#complex-but-more-customizable-solution","title":"Complex but more customizable solution","text":"<ul> <li>Write python script for scheduling task</li> <li>Need to install WebDriver to run a program on background</li> </ul> <p>\u81ea\u52d5\u3067liberal attendance\u3092\u3059\u308b\u624b\u9806 - Open specific url in browser (Brave) at specific time - May need to login - Push button to open liberal attendance section (target page) - Push \"attend\" button - Report the attendance - Done</p>"},{"location":"OSS/Side_project/%E8%87%AA%E5%8B%95%E3%81%A7liberal%20attendance%E3%82%92%E3%81%99%E3%82%8Bscript/#memo","title":"Memo","text":"<p>\u5f8c\u3067\u898b\u308b\u8a18\u4e8b: - https://stackoverflow.com/questions/54459701/what-is-selenium-and-what-is-webdriver - https://gist.github.com/passivebot/91d726bafc1f08eb475dd8384a3f21db - https://realpython.com/modern-web-automation-with-python-and-selenium/ - https://stackoverflow.com/questions/57837496/how-to-use-brave-web-browser-with-python-selenium-and-chromedriver</p>"},{"location":"OSS/automation_scripts/gmail_birthday_sender/","title":"Gmail birthday wish sender","text":"<ol> <li>Enter your gmail in script</li> <li>Enter your password in script</li> <li>Enter the email id of person you want to send</li> <li>Enter your birthday wishes</li> </ol>"},{"location":"OSS/automation_scripts/gmail_birthday_sender/#smtp","title":"smtp","text":"<ul> <li>simple mail transfer protocol</li> <li>about sending process</li> <li>smtp server</li> <li>handles the message transfer</li> <li>smtp port</li> <li>process</li> <li>client connection to SMTP server<ul> <li>Firstly, needs SMTP server to establish</li> <li>then once user hits 'send', SMTP connection will open</li> </ul> </li> <li>transfer data<ul> <li>SMTP client uses commands to tell what to do</li> </ul> </li> </ul>"},{"location":"OSS/automation_scripts/gmail_birthday_sender/#smtplib","title":"smtplib","text":""},{"location":"OSS/automation_scripts/gmail_birthday_sender/#mime","title":"MIME","text":"<ul> <li>an extension for SMTP that allows non-ASCII data to be sent</li> </ul>"},{"location":"OSS/automation_scripts/gmail_birthday_sender/#how-to-send-mail","title":"how to send mail","text":"<p>Because of google blocks low secure apps login to gmail, it becomes hard to send mail via gmail server using python. So I will use yagmail.</p> <ol> <li>create google account if you don't have it</li> <li>Turn on 2-Step Verification</li> <li>see more details at this article</li> <li>Create an application password</li> <li>Enter your gmail account, an application password in the script</li> </ol>"},{"location":"OSS/mypy/doc_memo/","title":"Memo for mypy document","text":"<ul> <li>cheat sheet</li> <li>not need annotate just variables because my can infer data-type from value</li> <li>basic usage: 'type-name'[ 'type-name' ]</li> <li>use | when type could be one of few types</li> <li>e.g) <code>x: list[int | str] = [3, 5, 'fun']</code></li> <li>function</li> <li><code>x: callable[[int, float], float] = f</code></li> <li>e.g.) <code>def plus(x: int, y: float) -&gt; float: ...</code></li> <li>yield of int equals to iterator of int:</li> <li>Iterator[int]</li> <li>class</li> <li><code>__init__</code> returns None</li> <li>omit type for <code>self</code></li> <li>To keep class attributes dynamic, override <code>__setattr__</code> or <code>__getattr__</code><ul> <li>above implementation allow assignment to any Class.x if type of value is compatible</li> </ul> </li> <li>Others</li> <li>reveal_type(<code>type</code>) will specify type</li> <li>Use <code>any</code> if you want to keep it dynamic</li> <li><code># type: ignore</code> comment to suppress confusing errors</li> <li>cast:<ul> <li>let you override inferred data type of an expression</li> <li><code>cast(data_type, expression)</code></li> <li>mypy can infer positional-only and keyword-only argument</li> <li>positional-only: <code>x: int, /</code></li> <li>keyword-only: <code>*, y: int</code></li> </ul> </li> <li>duck types</li> <li>e.g.) iterable, sequence</li> <li>use Io[str] or Io[bytes] for function that uses objects coming from an open() call</li> <li>What is decorator function?</li> <li>input: another function</li> <li>output: new function</li> <li><code>@decorator_name</code> above function to apply decorator function</li> </ul> <pre><code>from typing import TypeVar, Callable, Any\n\n# F will be used to represent decorator function\nF = TypeVar('F', bound=Callable[..., Any])\n</code></pre>"},{"location":"OSS/mypy/question/","title":"Question","text":""},{"location":"OSS/mypy/question/#1","title":"1","text":"<p>https://mypy.readthedocs.io/en/latest/getting_started.html</p> <p>This behavior is actually a fundamental aspect of the PEP 484 type system: when we annotate some variable with a type <code>T</code>, we are actually telling mypy that variable can be assigned an instance of <code>T</code>, or an instance of a subtype of <code>T</code>. That is, <code>list[str]</code> is a subtype of <code>Iterable[str]</code>.</p> <p>T\u304c\u3042\u308b\u4efb\u610f\u306e\u30bf\u30a4\u30d7\u3092\u6307\u3057\u3066\u3044\u308b\u306a\u3089\u3001\u30bf\u30a4\u30d7X\u3068\u3057\u305f\u65b9\u304c\u305d\u306e\u5f79\u5272\u306b\u9069\u3057\u3066\u3044\u308b\u3068\u601d\u3046\u3002\u306a\u305c\u306a\u3089algebra\u3067\u306f\u6163\u7fd2\u7684\u306bX\u3092\u5229\u7528\u3057\u3066\u304a\u308a\u3001\u8aad\u8005\u306b\u3082\u308f\u304b\u308a\u3084\u3059\u304f\u4f1d\u3048\u3089\u308c\u308b\u3068\u601d\u3046\u3002</p>"},{"location":"OSS/mypy/question/#2","title":"2","text":""},{"location":"OSS/xorg/plan_for_internship/","title":"Plan for internship","text":"<p>The X.Org Endless Vacation of Code (EVoC)</p>"},{"location":"OSS/xorg/x_doc_memo/","title":"X doc memo","text":"<p>List of docs</p>"},{"location":"OSS/xorg/x_doc_memo/#building-the-x-window-system-from-source","title":"Building the X Window System from Source","text":"<ul> <li>X Window System Concepts<ul> <li>X server\u306f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2(keyboard, display etc.)\u3092\u30b5\u30fc\u30d3\u30b9\u3068\u3057\u3066\u3001\u8907\u6570\u306e\u30d7\u30ed\u30b0\u30e9\u30e0(client)\u306b\u63d0\u4f9b\u3059\u308b</li> <li>X can work across a network, so it enables programs on the other computer (client) to display things to your computer (server)</li> <li>X\u304cInput\u3068output\u3092\u5b9f\u969b\u3069\u306e\u3088\u3046\u306b\u51e6\u7406\u3057\u3066\u3044\u308b\u304b\u306b\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u3002input\u306e\u65b9\u304c\u5b9f\u306f\u3088\u308a\u8907\u96d1\u3067\u96e3\u3057\u3044</li> </ul> </li> <li>Building the X Window System from Source</li> </ul>"},{"location":"OSS/xorg/x_doc_memo/#xplain-explaining-x11-for-the-rest-of-us","title":"Xplain: Explaining X11 for the rest of us","text":"<ul> <li>x clients\u304cx server\u306brequest\u3092\u9001\u308a\u3001\u4f55\u304b\u304c\u9054\u6210\u3055\u308c\u305f\u3089server\u304b\u3089client\u306bevent\u304c\u9001\u4fe1\u3055\u308c\u308b</li> <li>\u5404window\u306epixel memory\u304c\u5b58\u5728\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044</li> <li>\u5168\u4f53\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u306b\u4e00\u3064\u306e\u5de8\u5927\u306apixel buffer (\"front buffer\")\u3092\u7528\u610f\u3057\u3001\u305d\u306e\u30b9\u30da\u30fc\u30b9\u3092window\u306b\u8cb8\u3057\u51fa\u3059</li> <li>X server\u306fwindow\u4e0a\u306epixel\u306e\u4f4d\u7f6e\u3092\u5e38\u306b\u8ffd\u8de1\u3057\u3001\u5404\u30a2\u30d7\u30ea\u306b\u3044\u3064pixel\u3092\u518d\u63cf\u753b\u3059\u308b\u304b\u3092<code>Expose</code> event\u3092\u9001\u4fe1\u3057\u3066\u77e5\u3089\u305b\u3066\u3044\u308b</li> <li>\"clip list\": \u753b\u9762\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u90e8\u5206\u306f\u3001\u4e00\u3064\u306e\u753b\u50cf\uff08\u9577\u65b9\u5f62\uff09\u3068\u3057\u3066\u3067\u306f\u306a\u304f\u3001\u3088\u308a\u8efd\u91cf\u306a\u9577\u65b9\u5f62\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b</li> <li>window\u306fX server\u306e\"front buffer\"\u4e0a\u304b\u3089pixel\u3092\u501f\u308a\u308b\u9577\u65b9\u5f62\u3067\u3057\u304b\u306a\u3044</li> <li>window\u306b\u4f55\u304b\u3092\u8868\u793a\u3059\u308b\u65b9\u6cd5\u306b\u306f\u304a\u304a\u307e\u304b\u306b2\u3064\u306e\u65b9\u6cd5\u304c\u3042\u308b\u3002<code>background-pixmap</code> \u306f\u3001\u8868\u793a\u5185\u5bb9\u304c\u56fa\u5b9a\u7684\u3067\u5909\u5316\u3057\u306a\u3044\u5834\u5408\u306b\u4f7f\u3046\u3002<code>Expose</code> event\u3092app\u306b\u9001\u3063\u3066\u518d\u63cf\u753b\u3055\u305b\u308b\u65b9\u6cd5\u306f\u3001\u52d5\u7684\u3067\u6642\u9593\u3068\u5171\u306b\u5909\u308f\u308a\u3084\u3059\u3044\u5834\u5408\u306b\u4f7f\u3046\u3002</li> <li>Front buffer is a also \"backing pixmap\" but called as \"root pixmap\". \u9055\u3044\u306f\"front buffer\"\u306e\u5834\u5408\u30b9\u30af\u30ea\u30fc\u30f3\u306b\u8868\u793a\u3055\u308b\u3053\u3068\u3002</li> <li>As if very redirected window had its own \"front buffer\" to borrow pixels from<ul> <li>\u900f\u660e\u306a\u6620\u50cf\u3092\u8868\u793a\u3059\u308b\u306e\u306f\u3001x window system\u3067\u306f\u306a\u304fthird party\u306e\"composing manager\"\u304c\"backing pixmap\"\u3092\u5229\u7528\u3057\u3066\u53ef\u80fd\u306b\u3057\u3066\u308bq</li> </ul> </li> </ul> Normal drawing Redirected drawing Drawing a window directly to the screen by borrowing pixels from parent's windows. Firstly all drawing operations are sent to a separately created space (backing pixmap). Then drawing a window by borrowing pixels from parent's windows <p>\u307e\u3060\u8aad\u3093\u3067\u306a\u3044\u90e8\u5206\uff1aRegional Geometry</p>"},{"location":"OSS/xorg/x_doc_memo/#_1","title":"X doc memo","text":""},{"location":"OSS/xorg/XCB/doc_memo/","title":"Doc memo","text":""},{"location":"OSS/xorg/XCB/doc_memo/#developersguide-module","title":"DevelopersGuide: module\u304c\u3069\u306e\u3088\u3046\u306b\u958b\u767a\u3055\u308c\u3066\u3044\u308b\u304b\u77e5\u308b","text":"<ol> <li>Downloadings</li> <li>Build<ul> <li>shell script didn't work. Error: <code>aclocal: error: couldn't open directory 'm4': No such file or directory</code></li> <li>\u3068\u308a\u3042\u3048\u305a\u6df1\u523b\u306a\u554f\u984c\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u7121\u8996\u3059\u308b\u306e\u304c\u8ce2\u660e\u304b</li> <li>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u6642\u306bm4\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u308bmodule\u306f\u9664\u5916\u3057\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b</li> <li>The\u00a0<code>-n</code>\u00a0option allows the build script to continue the build with the next module</li> <li>X libraries are in <code>$PREFIX/lib</code></li> <li>X client programs are in <code>$PREFIX/bin</code></li> </ul> </li> </ol>"},{"location":"OSS/xorg/XCB/getting_started/","title":"Getting started","text":""},{"location":"OSS/xorg/XCB/getting_started/#tutorial","title":"tutorial","text":"<ul> <li>The XCB library gives a low level access to X server</li> <li>Lighter than Xlib</li> </ul> Clinet Server Server\u306b\u4f55\u3092\u3059\u308b\u3079\u304d\u304b\u306e\u6307\u793a\u3092\u9001\u4fe1\u3059\u308b Actually process inputs and client's instructions program\u3060\u304b\u3089\u7570\u306a\u308b\u30de\u30b7\u30f3\u306b\u3044\u308b\u3053\u3068\u3082\u3042\u308b - GUI programming model: asynchronous (\u76f8\u624b\u3068\u306e\u8db3\u4e26\u307f\u3092\u63c3\u3048\u306a\u3044\u3053\u3068) or called event-driven programming - XCB\u306e\u30a8\u30c3\u30bb\u30f3\u30b9 (\u4e3b\u306bXlib\u3068\u306e\u5bfe\u6bd4\u3067\u8aac\u660e\u3055\u308c\u308b): 1. X connection: X server\u3068\u306econnection (\u9001\u53d7\u4fe1\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u3064\u3089\u306a\u308a)\u306b\u5bfe\u3059\u308b\u30dd\u30a4\u30f3\u30bf\u30fc\u3092XCB\u304c\u63d0\u4f9b\u3059\u308b 2. Request/reply: Xlib\u3092\u4ecb\u3057\u3066X server\u3068\u3084\u308a\u3068\u308a\u3092\u3059\u308b\u3068\u30011\u3064\u306e\u30d7\u30ed\u30bb\u30b9\u304c\u5b8c\u5168\u306b\u5b8c\u4e86\u3059\u308b\u307e\u3067\u6b21\u304c\u5f85\u3064\u5fc5\u8981\u304c\u3042\u308a\u3068\u3066\u3082\u9045\u304f\u306a\u308b\u3002\u3057\u304b\u3057XCB\u3092\u4f7f\u3048\u3070\u3001\u5927\u91cf\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9023\u7d9a\u3057\u3066\u9001\u3063\u3066\u3001\u305d\u306e\u5f8c\u597d\u304d\u306a\u6642\u306bcookie(\u8b58\u5225\u5b50)\u3092\u4f7f\u7528\u3057\u3066\u3001repley\u3092\u53d7\u3051\u53d6\u308c\u308b 3. Event: XCB recieves event from X server and return a pointer to a <code>event</code>'s structure 4. Graphical context: Xlib XCB Keep a full structure of GC and modify request for the optimization Minimalist.GC are just simple IDs.Each request is directly sent to X server"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2024/11/07/computer-science%E3%81%B8%E3%81%AE%E8%A8%88%E7%94%BB%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B/","title":"Computer science\u3078\u306e\u8a08\u753b\u3092\u5909\u66f4\u3059\u308b","text":"<ul> <li>\u4eca\u307e\u3067\u306f42\u306e\u554f\u984c\u3092\u89e3\u304d\u306a\u304c\u3089\u540c\u6642\u9032\u884c\u3067OSS\u306b\u8ca2\u732e\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u305f\u304c\u3001\u4e21\u65b9\u3068\u3082\u3042\u307e\u308a\u9032\u884c\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u3002</li> <li>Leetcode\u306e\u554f\u984c\u3092\u89e3\u304f\u3053\u3068\u3082\u4e00\u5ea6\u4e2d\u6b62\u3059\u308b</li> <li>\u3088\u3063\u3066\u671f\u9593\u3092\u5206\u3051\u3066\u3001\u7247\u65b9\u306b\u96c6\u4e2d\u3057\u305f\u65b9\u304c\u52b9\u679c\u7684\u3060\u3068\u8003\u3048\u305f\u306e\u3067\u8a08\u753b\u3092\u5909\u66f4\u3059\u308b\u3002</li> </ul>"},{"location":"blog/2024/11/07/computer-science%E3%81%B8%E3%81%AE%E8%A8%88%E7%94%BB%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B/#cs-by-1117","title":"\u65b0CS\u8a08\u753b by 11/17","text":"<ul> <li>42 by c10 (2h45min) 45, 45, 45, 30</li> <li>Algorithm-game (1h after lunch)</li> </ul>"},{"location":"blog/2024/09/28/data-abstraction/","title":"Data abstraction","text":"<ul> <li>constructor and selector</li> </ul>"},{"location":"blog/2024/09/28/data-abstraction/#linked-list","title":"Linked list","text":"<ul> <li>a pair containing the first element of sequence and the rest of sequence</li> <li>the incremental process to find length and an element in sequence cost more time</li> <li>linked list has a recursive structure so it can be useful for constructing sequences incrementally</li> </ul>"},{"location":"blog/2024/09/28/data-abstraction/#mutable-data","title":"Mutable data","text":"<ul> <li>it is a essence of object-oriented programming</li> <li>it has identity</li> <li> <p>Objects combine data values with behavior (both information and processes)</p> </li> <li> <p>Objects have attributes</p> </li> </ul> <pre><code># expression: object\n# name: attribute\n&lt;expression&gt;.&lt;name&gt;\n</code></pre> <ul> <li>Objects have methods</li> <li>Objects have methods, which are \"function-valued\" attributes</li> </ul>"},{"location":"blog/2024/09/28/data-abstraction/#sequence-objects","title":"Sequence objects","text":"<ul> <li>lists are mutable while numbers are immutable</li> <li>In case of mutable data, methods called on one name can affect another name at the same time</li> <li>To copy listA without affecting listA by <code>list(listA)</code></li> <li><code>is</code>(identity) is stronger condition than <code>==</code>(equal)</li> <li>list comprehension creates new list</li> </ul>"},{"location":"blog/2024/09/28/data-abstraction/#tuple","title":"Tuple","text":"<ul> <li>an immutable sequence</li> </ul>"},{"location":"blog/2024/09/28/data-abstraction/#dictionariesmaps","title":"Dictionaries(maps)","text":"<ul> <li>unordered collections of key-value pairs</li> <li>restriction:</li> <li>key cannot be a mutable value</li> <li>max one value for a key</li> </ul>"},{"location":"blog/2024/09/28/data-abstraction/#local-state","title":"Local state","text":"<ul> <li>lists and dictionary (also functions) have changeable state in it</li> <li>non-local: the binding is change only in the first frame</li> <li>only single binding for this variable</li> <li>python particular: all instances of a name must refer to the same frame</li> <li>\u540c\u3058\u95a2\u6570\u5185\u3067\u540c\u3058\u540d\u524d\u304c2\u3064\u306e\u30d5\u30ec\u30fc\u30e0\u3067\u30a2\u30af\u30bb\u30b9\u3055\u308c\u308b\u3053\u3068\u3092\u9632\u3050\u305f\u3081</li> </ul>"},{"location":"blog/2024/09/28/data-abstraction/#benefits-of-non-local-assignment","title":"Benefits of non-local assignment","text":"<ul> <li>To view programs as independent objects</li> <li>Each instance of function A maintain its own non-local state, but its non-local state is inaccessible to any other functions =&gt; object abstraction!</li> </ul>"},{"location":"blog/2024/09/28/data-abstraction/#the-cost-of-non-local-assignment","title":"The cost of non-local assignment","text":"<ul> <li>If you do non-local assignment, you must pay attention to a effect of change to other name that refer to same value</li> <li>Unless making new frame by a function call, assignment statements always change bindings in existing frames</li> </ul>"},{"location":"blog/2024/09/28/data-abstraction/#implementing-lists-and-dictionaries","title":"Implementing lists and dictionaries","text":"<ul> <li>Use dispatch functions:</li> <li>Different operations based on a message it receives</li> <li>first argument: message</li> <li>others: parameters used for behavior function</li> </ul>"},{"location":"blog/2024/09/28/data-abstraction/#constraint-based-system","title":"Constraint-based system","text":""},{"location":"blog/2024/09/28/data-abstraction/#how-to-express-non-one-directional-model-like-linear-relationships","title":"How to express non one-directional model like linear relationships","text":"<ul> <li>Ans. Use constraints such as <code>adder(a, b, c)</code> same as \\(a + b = c\\)</li> <li>programming language: combining constraints</li> </ul>"},{"location":"blog/2024/09/28/data-abstraction/#object-oriented-programming","title":"Object-oriented programming","text":"<ul> <li>Type of object is called \"Class\"</li> <li>Identity:</li> <li>Each object from same class has different identities</li> </ul> <p>Syntax</p> <pre><code>class &lt;name&gt;:\n  &lt;suite&gt;\n</code></pre> <ul> <li><code>__init__(self, parameters)</code> is a constructor of an object from class.</li> <li>Self is bound to newly created object</li> </ul> <p>Difference from message passing</p> <ul> <li>message: names local to a class</li> <li>local state values: instance attributes</li> </ul> <pre><code># same as dot expression\ngetattr(&lt;expression&gt;, &lt;name&gt;)\n</code></pre> <pre><code># test if expression has attribute\nhasattr(&lt;expression&gt;, &lt;name&gt;)\n</code></pre> <ul> <li>\"function\" \u2260 \"method\": To achieve automatic self passing, it distinguishes \"function\" and \"method\"</li> </ul> <pre><code>Account.deposit(spock_account, 1000) # function\nspock_account.deposit(1000) # method\n</code></pre>"},{"location":"blog/2024/09/28/data-abstraction/#object-role","title":"Object role","text":"<ul> <li>Determines what method means.</li> </ul> <pre><code>flowchart LR\nobject--specify--&gt;method</code></pre>"},{"location":"blog/2024/09/28/data-abstraction/#class-attributes-vs-instance-attributesvariables","title":"Class attributes v.s. Instance attributes(variables)","text":"Class attribute Instance attribute Shared accross with all objects from a same class Each object has an different instance attribute from a same class <pre><code># This changes attributes for all objects\n&lt;class&gt;.&lt;class-attribute&gt; = 1\n# This changes attribute for only one object\n# (will be unaffected by above assignment)\n&lt;object&gt;.&lt;class-attribute&gt; = 1\n</code></pre>"},{"location":"blog/2024/09/28/data-abstraction/#inheritance-specialization","title":"Inheritance (specialization)","text":""},{"location":"blog/2024/10/13/%E9%9F%93%E5%9B%BD%E7%95%99%E5%AD%A61%E3%83%B6%E6%9C%88%E7%9B%AE/","title":"\u97d3\u56fd\u7559\u5b661\u30f6\u6708\u76ee","text":"<ul> <li>\u65e5\u672c\u4eba\u3068\u3057\u3066\u306e\u5e30\u5c5e\u610f\u8b58\u3092\u7559\u5b66\u3057\u3066\u304b\u3089\u3088\u308a\u5f37\u304f\u611f\u3058\u305f</li> <li>\u5468\u308a\u306e\u76ee\u3092\u6c17\u306b\u3057\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u305f</li> <li>\u81ea\u5206\u306e\u610f\u898b\u3092\u4e3b\u5f35\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u611f\u3058\u305f</li> <li>\u97d3\u56fd\u8a9e\u3092\u5168\u304f\u52c9\u5f37\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u305d\u308d\u305d\u308d\u59cb\u3081\u308b\u3002\u591c\u306b\u6642\u9593\u3092\u56fa\u5b9a\u3057\u3066\u3084\u308b\u3002</li> <li>1\u65e5\u306b\u3084\u308c\u308b\u3053\u3068\u306f\u9650\u3089\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u4e8b\u524d\u306b\u3084\u308b\u3079\u304d\u3053\u3068\u3092\u7d5e\u308b</li> <li>\u3082\u3046\u5c11\u3057\u4f11\u61a9\u3059\u308b</li> </ul>"},{"location":"blog/2024/10/13/%E9%9F%93%E5%9B%BD%E7%95%99%E5%AD%A61%E3%83%B6%E6%9C%88%E7%9B%AE/#_1","title":"\u3084\u3063\u305f\u3053\u3068","text":"<ul> <li>\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u306e\u52c9\u5f37:</li> <li>10/10\u307e\u3067\u306f'Modern C'\u3068\u3044\u3046\u672c\u3092\u8aad\u3093\u3067\u3044\u305f\u304c\u3001\u96e3\u3057\u304b\u3063\u305f\u306e\u3067\u4ed6\u306e\u65b9\u6cd5\u3092\u63a1\u7528\u3057\u305f</li> <li>\u73fe\u5728\u306f42\u3068\u3044\u3046\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30a8\u30f3\u30b8\u30cb\u30a2\u990a\u6210\u6a5f\u95a2\u306e\u554f\u984c\u3067C\u8a00\u8a9e\u3092\u5b66\u3093\u3067\u3044\u308b</li> <li>\u554f\u984c\u3092\u89e3\u304f\u5f62\u5f0f\u3067\u5b66\u3076\u65b9\u304c\u52b9\u679c\u7684\u3060\u3068\u601d\u3063\u305f\u306e\u3067\u3001\u672c\u3092\u8aad\u307f\u9032\u3081\u308b\u3060\u3051\u3067\u306f\u306a\u304f\u554f\u984c\u4e3b\u5c0e\u306b\u3057\u305f</li> <li>2h30min: \u5927\u5b66\u306e\u554f\u984c</li> <li>3h: C\u8a00\u8a9e\u306e\u554f\u984c</li> </ul>"},{"location":"blog/2024/10/13/%E9%9F%93%E5%9B%BD%E7%95%99%E5%AD%A61%E3%83%B6%E6%9C%88%E7%9B%AE/#_2","title":"\u3053\u308c\u304b\u3089\u3084\u308b\u3053\u3068","text":"<ul> <li>\u30c6\u30b9\u30c8\u52c9\u5f37: 3h</li> <li>42\u306e\u554f\u984c: 3h</li> <li>\u97d3\u56fd\u8a9e\u306e\u5b66\u7fd2: 8:40 - 9:30</li> <li>~11: Finish preparing for contribution</li> <li>11 - 1: Contribution period</li> <li>1 - 2: 42 piscine</li> <li>2 - 8: Intern + solve problems on 42</li> </ul>"},{"location":"blog/2024/10/26/weekly-report/","title":"Weekly report","text":"","tags":["report"]},{"location":"blog/2024/10/26/weekly-report/#_1","title":"\u4f55\u3092\u3057\u305f\u304b","text":"<ul> <li>\u30c6\u30b9\u30c8\u52c9\u5f37</li> </ul>","tags":["report"]},{"location":"blog/2024/10/26/weekly-report/#_2","title":"\u611f\u60f3","text":"<ul> <li>\u5927\u5b66\u5168\u4f53\u306e\u30c6\u30b9\u30c8\u9031\u9593\u304c\u7d42\u4e86\u3057\u305f\u304c\u3001\u307e\u305f\u81ea\u5206\u306f\u30c6\u30b9\u30c8\u304c\u6b8b\u3063\u3066\u3044\u308b</li> <li>\u521d\u3081\u3066\u306e\u60c5\u5831\u7cfb\u306e\u30c6\u30b9\u30c8\u3060\u3063\u305f\u305f\u3081\u30011\u3064\u76ee\u306e\u79d1\u76ee\u306f\u3053\u3051\u305f\u304c\u305d\u308c\u4ee5\u5916\u306f\u554f\u984c\u306a\u304f\u89e3\u3051\u305f</li> <li>\u601d\u3063\u305f\u3088\u308a\u3082\u30c6\u30b9\u30c8\u306b\u6642\u9593\u3092\u5272\u3044\u305f\u306e\u3067\u3001\u97d3\u56fd\u8a9e\u3001\u500b\u4eba\u8ab2\u984c\u3001\u672c\u3092\u8aad\u3080\u6642\u9593\u304c\u306a\u304b\u3063\u305f -\u3000\u30a4\u30f3\u30bf\u30fc\u30f3\u306b\u7533\u3057\u8fbc\u3080\u305f\u3081\u306e\u6e96\u5099\u309211\u6708\u307e\u3067\u306b\u7d42\u308f\u3089\u305b\u308b\u4e88\u5b9a\u3060\u3063\u305f\u304c\u3001\u9593\u306b\u5408\u308f\u306a\u3044\u306e\u3067\u5f15\u304d\u5ef6\u3070\u3059</li> <li>\u6839\u62e0\u306e\u306a\u3044\u81ea\u4fe1\u3092\u6301\u3064\u3053\u3068\u304c\u5927\u4e8b</li> <li>\u30da\u30fc\u30d1\u30fc\u30ab\u30f3\u30d1\u30cb\u30fc\u3092\u4f5c\u3063\u3066\u6295\u8cc7\u3092\u6cd5\u4eba\u3067\u3057\u305f\u3044</li> <li>\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30a8\u30f3\u30b8\u30cb\u30a2\u4ee5\u5916\u306e\u53ef\u80fd\u6027\u306b\u76ee\u3092\u3080\u3051\u308b</li> <li>\u91d1\u878d\u7cfb\u306e\u4ed5\u4e8b\u3082\u3044\u3044\u3068\u601d\u3063\u3066\u3044\u308b</li> <li>\u81ea\u5206\u306e\u4f7f\u3048\u308b\u6642\u9593\u3092\u5897\u3084\u3059\uff08\u3088\u308a\u697d\u3092\u3059\u308b\u305f\u3081\u306b\u52aa\u529b\u3092\u3059\u308b\uff09=&gt; \u81ea\u5206\u5c02\u7528\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u4f5c\u308a\u305f\u3044</li> <li>\u30e1\u30e2\u306f\u5358\u8a9e\u540d\u3092\u7701\u7565\u3059\u308b\u3068\u66f8\u304f\u901f\u5ea6\u304c\u901f\u304f\u306a\u308b</li> </ul>","tags":["report"]},{"location":"blog/2024/10/26/weekly-report/#_3","title":"\u4f55\u3092\u3059\u308b\u304b","text":"\u500b\u4eba \u4eba\u306b\u8a71\u3057\u304b\u3051\u308b\u65b0\u3057\u3044\u3053\u3068\u306b\u30c1\u30e3\u30ec\u30f3\u30b8\u3092\u3059\u308b\u672c\u3092\u671d\u306b\u8aad\u3080(30 min)\u7b4b\u30c8\u30ec(Tue, Thu, Fri)\u97d3\u56fd\u8a9e(\u5e30\u5b85\u5f8c50min) \u5927\u5b66 1\u65e52h\u4e88\u7fd2(\u591c)\u6388\u696d\u306e\u8cc7\u6599\u3060\u3051\u898b\u308c\u3070\u3044\u3044 \u8a08\u753b \u671d\u306b\u305d\u306e\u65e5\u4f55\u3092\u3059\u308b\u304b\u3056\u3063\u304f\u308a\u3068\u6c7a\u3081\u308b\u9031\u4e00\u56de\u8a08\u753b\u3092\u66f4\u65b0\u3059\u308b CS leetcode 2 problems (1h after lunch)42 problems OSS intern (2h)Also look for other OSS programs and summer intern(ask google guy) mental \u4eba\u3092\u52a9\u3051\u306b\u884c\u304f\u884c\u52d5\u3059\u308b\u81ea\u4fe1\u3092\u6301\u3064 long-term by 11/5: Finnish preparationby 12/1: One commit to OSS1/6 - 2: 42 piscine2 - 8: intern","tags":["report"]},{"location":"blog/2024/10/26/weekly-report/#_4","title":"\u57fa\u672c\u6bce\u65e5\u3084\u308b\u3053\u3068","text":"<ul> <li>\u305d\u306e\u65e5\u3001\u4f55\u306b\u6642\u9593\u3092\u5272\u304f\u304b\u3092\u60f3\u50cf\u3059\u308b</li> <li>\u672c\u3092\u8aad\u3080 (30min)</li> <li>42\u306e\u554f\u984c\u3092\u89e3\u304f and C\u306e\u672c\u3092\u8aad\u3080 (1h30min)</li> <li>leetcode (1h after lunch)</li> <li>OSS (2h)</li> <li>\u97d3\u56fd\u8a9e (\u5e30\u5b85\u5f8c50min)</li> <li>\u660e\u65e5\u306e\u4e88\u7fd2(slide\u3092\u898b\u308b 1h30min till 21:10)</li> </ul>","tags":["report"]},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/thought/","title":"thought","text":""},{"location":"blog/category/study_abroad/","title":"study_abroad","text":""},{"location":"blog/category/python/","title":"python","text":""},{"location":"blog/category/oop/","title":"OOP","text":""}]}